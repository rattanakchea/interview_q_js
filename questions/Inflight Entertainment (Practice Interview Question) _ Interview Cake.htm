<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0135)https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&utm_campaign=weekly_email&utm_medium=email -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(1)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(2)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(3)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(4)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(5)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(6)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(7)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(8)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(9)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(10)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(11)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/9e57878e2e"></script><script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/nr-1026.min.js"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(12)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/identify"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/track(13)"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/beacon"></script><script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/identify(1)"></script><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}</style>
    <script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/prum.min.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/mixpanel-2-latest.min.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/0751fb0485a5b0be210d27b9cefd9842c5c65cc6.2.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/analytics.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/fbevents.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/4774384.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/conversion_async.js"></script><script id="facebook-jssdk" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/all.js"></script><script type="text/javascript" async="" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/analytics.min.js"></script><script type="text/javascript">
        
        window.IC = window.IC || {};
        window.IC.currentUser = JSON.parse('{"id":1230475,"username":"rattanak.chea","email":"rattanak.chea@gmail.com","date_joined":"2015-03-09T05:53:40.836403+00:00","first_name":"Rattanak","last_name":"Chea","full_name":"Rattanak Chea","short_name":"Rattanak","is_anonymous":false,"is_on_last_question":false,"percent_done":0,"num_questions_done":0,"num_questions_remaining":44,"recruiting_is_interested_in_intros":null,"is_full_access":false,"first_payment_date":null,"last_payment_date":null,"num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"php","preferred_notepad_language":"javascript","is_staff":false,"auth_providers_human_readable_list":"Github and Google","num_auth_providers":2,"auth_email":"rattanak.chea@gmail.com","profile_public_id":null}');
        
    </script>


    
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/1358232165.js"></script>
    

    
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(2),u=e(3),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}finally{f.emit("fn-end",[c.now()],t)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],3:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],4:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=m(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){v[e]=m(e).concat(n)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(t)}function g(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var v={},y={},b={on:l,emit:t,get:w,listeners:m,context:n,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(2),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=h.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+h.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===d.readyState&&i()}function i(){f("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),f=e("handle"),c=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1026.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=n.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),f("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"agent":"","licenseKey":"9e57878e2e","applicationID":"7328113","queueTime":9,"applicationTime":121,"errorBeacon":"bam.nr-data.net","beacon":"bam.nr-data.net","transactionName":"ZVwAbEQCDUQCAUwKDFwWJE1YABdeDAwXDhpBUBZdGA4CXg0DSBNNRFAHT0VZMkIGEUwKDFxvC11BTQRSFw=="}</script>
        <link rel="shortcut icon" type="image/x-icon" href="https://www.interviewcake.com/images/favicon.ico?bust=142">
        <link rel="canonical" href="https://www.interviewcake.com/question/java/inflight-entertainment">
        <meta name="description" content="Interview questions to help you get job offers. Writing a simple recommendation algorithm that helps people choose which movies to watch during flights">

        

        <meta property="og:title" content="Inflight Entertainment | Interview Cake">
        <meta property="og:description" content="Writing a simple recommendation algorithm that helps people choose which movies to watch during flights">
        <meta property="og:image" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta property="og:type" content="website">
        <meta property="og:locale" content="en_US">
        <meta property="og:site_name" content="Interview Cake: Programming Interview Questions and Tips">
        <meta property="fb:app_id" content="149278655279066">
        <meta property="fb:admins" content="514407734">
        <meta property="og:url" content="https://www.interviewcake.com/question/java/inflight-entertainment">

        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@interviewcake">
        <meta name="twitter:title" content="Inflight Entertainment | Interview Cake">
        <meta name="twitter:description" content="Writing a simple recommendation algorithm that helps people choose which movies to watch during flights">
        <meta name="twitter:creator" content="@interviewcake">
        <meta name="twitter:image:src" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta name="twitter:domain" content="interviewcake.com">
        <meta name="format-detection" content="telephone=no">

        <title>Inflight Entertainment (Practice Interview Question) | Interview Cake</title>
    


    

    
    <script type="text/javascript">
        window.analytics||(window.analytics=[]),window.analytics.methods=["identify","track","trackLink","trackForm","trackClick","trackSubmit","page","pageview","ab","alias","ready","group","on","once","off"],window.analytics.factory=function(a){return function(){var t=Array.prototype.slice.call(arguments);return t.unshift(a),window.analytics.push(t),window.analytics}};for(var i=0;i<window.analytics.methods.length;i++){var method=window.analytics.methods[i];window.analytics[method]=window.analytics.factory(method)}window.analytics.load=function(a){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src=("https:"===document.location.protocol?"https://":"http://")+"d2dq2ahtl5zl1z.cloudfront.net/analytics.js/v1/"+a+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(t,n)},window.analytics.SNIPPET_VERSION="2.0.6",
        window.analytics.load("rowk0wc1g6"),
        window.analytics.page();
    </script>
    
    


    


    

        <link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/bootstrap.min.css" rel="stylesheet">
        <link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/bootstrap-glyphicons.css" rel="stylesheet">
        <link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/font-awesome.min.css" rel="stylesheet">
        <link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/katex.min.css" rel="stylesheet">
    
    
        
            <link rel="stylesheet" href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/46fc221492c5.css" type="text/css" media="all">
        
    




<!--
<link href='http://fonts.googleapis.com/css?family=Raleway:500,700,100' rel='stylesheet' type='text/css'>
-->
<!--
<link href='http://fonts.googleapis.com/css?family=Arimo:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
-->
<link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/css" rel="stylesheet" type="text/css">

<link rel="apple-touch-icon" href="https://www.interviewcake.com/images/cake_white_on_blue_128_128_unrounded.png">
<!--
thought maybe for headings. but nope.
<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,700,300italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css'>
-->




<meta name="50fc73d52056532c18787976ceb78fddb87b78b2" content="ceb4cec06fc4a780c7b31b85c07cf75d1ca58d9d">





<script type="text/javascript">
var _vwo_code=(function(){
var account_id=50155,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
// DO NOT EDIT BELOW THIS LINE
f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script><script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/j.php" type="text/javascript"></script>

<meta name="d41d8cd98f00b204e9800998ecf8427e_lib_detect" id="d41d8cd98f00b204e9800998ecf8427e_lib_detect" content="Bootstrap:3.3.2,jQuery:1.10.2,Underscore:1.5.2,yepnope:,AngularJS:1.3.16"><script type="text/javascript" src="chrome-extension://cgaocdmhkmfnkdkbnckgmpopcbpaaejo/library/libraries.js"></script><script type="text/javascript" src="chrome-extension://cgaocdmhkmfnkdkbnckgmpopcbpaaejo/content_scripts/lib_detect.js"></script><style data-olark="true" type="text/css">.olark-key,#hbl_code,#olark-data{display: none !important;}</style><style data-olark="true" type="text/css">@media print {#habla_beta_container_do_not_rely_on_div_classes_or_names {display: none !important}}</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}</style><link data-olark="true" rel="stylesheet" href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/theme.css" type="text/css"></head>
<body ng-app="prepApp" ng-init="questionIsEmbedded = false" class="ng-scope" style="" cz-shortcut-listen="true"><div id="olark" style="display: none;"><olark><iframe frameborder="0" id="olark-loader" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/saved_resource.html"></iframe></olark></div>

<div class="print-header navbar-print-header navbar navbar-inverse">
    <div class="navbar-header">
        <span class="navbar-brand">
            <img src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/cake_white_20_21.png" class="logo">
            Interview Cake
        </span>
    </div>
</div>




<div class="navbar navbar-normal navbar-inverse ng-scope" role="navigation" ng-controller="HeaderCtrl" language="php">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="https://www.interviewcake.com/">
            Interview Cake
        </a>
    </div>

  <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav navbar-left">
            <li>
                <a href="https://www.interviewcake.com/coding-interview-tips">Tips and Tricks</a>
            </li>

            <li class="dropdown">
                <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" class="dropdown-toggle" data-toggle="dropdown" rel="nofollow">
                    Glossary <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="https://www.interviewcake.com/big-o-notation-time-and-space-complexity">Big O Notation: <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span>, <span complexity="n^2" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></span></span>, etc</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/article/logarithms">Logarithms</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-search">Binary Search</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/counting-sort">Counting Sort</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/overlapping-subproblems">Overlapping Subproblems</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/memoization">Memoization</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bottom-up">Bottom-Up Algorithms</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/lazy">Lazy Evaluation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/garbage-collection">Garbage Collection</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/integer-overflow">Integer Overflow</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/js-closure">Closure</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/slice">Array Slicing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hashing">Hashing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/mutable">Mutable vs Immutable</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/in-place">In-Place Operation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/triangular-series">Triangular Series</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/array">Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/dynamic-array-amortized-analysis">Dynamic Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hash-map">Hash Table</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/linked-list">Linked List</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/queue">Queue</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/stack">Stack</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-tree">Binary Tree</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-numbers">Binary Numbers</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/and">Bitwise AND</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/or">Bitwise OR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/xor">Bitwise XOR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/not">Bitwise NOT</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bit-shift">Bit Shifting</a>
                    </li>
                </ul>
            </li>

            
            
            
            <li>
                
                <a href="https://www.interviewcake.com/all-questions/php">All Questions</a>
                
            </li>
            
            <li>
                
                
            </li>
        </ul>



        <ul class="nav navbar-nav navbar-right" ng-show="currentUserSet">

            
            <li>
                

                <a class="upgrade" ng-hide="currentUser.is_full_access" href="https://www.interviewcake.com/upgrade">
                    <!--
                    <i class="fa fa-unlock-alt fa-lg" style="margin-right: 5px;" ></i>
                    -->

                    Get the full course

                    <span class="glyphicon glyphicon-chevron-right full-access-badge"></span>

</a>
            </li>
            



            
            <li class="dropdown language-dropdown ng-scope ng-hide" ng-controller="NavbarTranslationCtrl" ng-show="contentLanguage&amp;&amp;currentUser.is_full_access ">
                <a rel="nofollow" href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" class="dropdown-toggle ng-binding" data-toggle="dropdown">
                    Python <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                
                    <!-- ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">Python</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">Ruby</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">Java</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">JavaScript</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">C</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">C++</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">C#</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">PHP</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' --><li ng-repeat="language in contentLanguages | orderBy: &#39;dropdown_rank&#39;" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" ng-click="updateLanguage(language, true)" class="ng-binding">Swift (beta)</a>
                    </li><!-- end ngRepeat: language in contentLanguages | orderBy: 'dropdown_rank' -->
                
                </ul>
            </li>
            

            <li>
                <p class="navbar-text">
                    
                    'sup <a rel="nofollow" trackling="" the-event="Settings Link Click" href="https://www.interviewcake.com/account">Rattanak</a>.
                    
                    <span ng-show="currentUser.is_full_access" class="glyphicon glyphicon-star full-access-badge ng-hide"></span>
                </p>
            </li>
            <li ng-hide="currentUser.is_anonymous">
                <a rel="nofollow" ng-click="logoutClick($event)" tracklink="" the-event="Logout Link Click" the-properties="{&quot;which&quot; : &quot;header top right&quot;}" href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" class="ng-isolate-scope">Log out</a>
            </li>

            <li ng-show="currentUser.is_anonymous" class="ng-hide">
                <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email" rel="nofollow" ng-click="loginClick(&#39;header top right&#39;)">Log in to save progress</a>
            </li>
        </ul>
    </div>

</div>


<div class="below-nav">

    <div class="ic-alerts">
        
        
    </div>

    

    
    

<div class="quiz ng-scope" ng-controller="PrepSeshApp">
    
        
            

<div ng-controller="NumberlineCtrl" class="numberline-wrapper ng-scope">

    <section ng-controller="NumberlineScrollingCtrl" class="numberline-scrolling ng-scope" ngc-scroll="setEdgeFadeIntensity()">
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/stock-price" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Apple Stocks">
    
    

            <span class="number">
                1
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/product-of-other-numbers" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Product of All Other Numbers">
    
    

            <span class="number">
                2
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/highest-product-of-3" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Highest Product of 3">
    
    

            <span class="number">
                3
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merging-ranges" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merging Meeting Times">
    
    

            <span class="number">
                4
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/coin" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Making Change">
    
    

            <span class="number">
                5
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/rectangular-love" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Rectangular Love">
    
    

            <span class="number">
                6
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/temperature-tracker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Temperature Tracker">
    
    

            <span class="number">
                7
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/balanced-binary-tree" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Balanced Binary Tree">
    
    

            <span class="number">
                8
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bst-checker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Binary Search Tree Checker">
    
    

            <span class="number">
                9
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/second-largest-item-in-bst" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="2nd Largest Item in a Binary Search Tree">
    
    

            <span class="number">
                10
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/compress-url-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="MillionGazillion">
    
    

            <span class="number">
                11
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-in-ordered-set" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find in Ordered Set">
    
    

            <span class="number">
                12
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-rotation-point" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Rotation Point">
    
    

            <span class="number">
                13
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper current                                                              future                             ng-scope" ng-controller="NumberlineCurrentQuestionCtrl">

    
    
        <a href="https://www.interviewcake.com/question/inflight-entertainment" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Inflight Entertainment">
    
    

            <span class="number">
                14
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/nth-fibonacci" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Compute nth Fibonacci Number">
    
    

            <span class="number">
                15
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/cake-thief" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Cake Thief">
    
    

            <span class="number">
                16
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-scope" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="JavaScript Scope">
    
    

            <span class="number">
                17
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-whats-wrong" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="What&#39;s Wrong with This JavaScript?">
    
    

            <span class="number">
                18
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/queue-two-stacks" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Queue Two Stacks">
    
    

            <span class="number">
                19
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/largest-stack" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Largest Stack">
    
    

            <span class="number">
                20
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-unique-int-among-duplicates" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Stolen Breakfast Drone">
    
    

            <span class="number">
                21
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/delete-node" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Delete Node">
    
    

            <span class="number">
                22
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/linked-list-cycles" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Does This Linked List Have A Cycle?">
    
    

            <span class="number">
                23
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse A Linked List">
    
    

            <span class="number">
                24
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/kth-to-last-node-in-singly-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Kth to Last Node in a Singly-Linked List">
    
    

            <span class="number">
                25
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-string-in-place" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse String in Place">
    
    

            <span class="number">
                26
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-words" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse Words">
    
    

            <span class="number">
                27
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/matching-parens" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Parenthesis Matching">
    
    

            <span class="number">
                28
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bracket-validator" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Bracket Validator">
    
    

            <span class="number">
                29
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/permutation-palindrome" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Permutation Palindrome">
    
    

            <span class="number">
                30
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/recursive-string-permutations" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Recursive String Permutations">
    
    

            <span class="number">
                31
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/top-scores" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Top Scores">
    
    

            <span class="number">
                32
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/which-appears-twice" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Which Appears Twice">
    
    

            <span class="number">
                33
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/word-cloud" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Word Cloud Data">
    
    

            <span class="number">
                34
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/shuffle" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="In-Place Shuffle">
    
    

            <span class="number">
                35
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/single-rifle-check" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Single Riffle Shuffle">
    
    

            <span class="number">
                36
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-5-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 5-sided die">
    
    

            <span class="number">
                37
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-7-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 7-sided die">
    
    

            <span class="number">
                38
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/two-egg-problem" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Two Egg Problem">
    
    

            <span class="number">
                39
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition">
    
    

            <span class="number">
                40
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space-beast-mode" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition BEAST MODE">
    
    

            <span class="number">
                41
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-files" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Duplicate Files">
    
    

            <span class="number">
                42
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merge-sorted-arrays" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merge Sorted Arrays">
    
    

            <span class="number">
                43
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                future
                           ">

    
    
        <a href="https://www.interviewcake.com/question/url-shortener" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="URL Shortener">
    
    

            <span class="number">
                44
            </span>

            

    
    
        </a>
    
    
</div>

            
        
    </section>

    <div class="edge-fade left" ng-style="{left: edgeFadePositions.left + &#39;px&#39;}" style="left: -160px;"></div>
    <div class="edge-fade right" ng-style="{right: edgeFadePositions.right + &#39;px&#39;}" style="right: 0px;"></div>

    <div class="scroll-on-hover left ng-hide" ng-mouseenter="scrollDirection = &#39;-&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.left === -edgeFadeWidth">
    </div>
    <div class="scroll-on-hover right" ng-mouseenter="scrollDirection = &#39;+&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.right &lt;= -(edgeFadeWidth - 2)"> <!-- cuz chrome only scrolls to 2px less than it can -->
    </div>

</div>

        
    

    
        <div class="free-questions-left" ng-show="currentUserSet &amp;&amp; !currentUser.is_full_access">


<p>
<span ng-show="currentUser.getNumFreeQuestionsLeft()&gt;0" class="ng-hide">

    <span ng-show="currentUser.getNumFreeQuestionsLeft()==1" class="ng-hide">Just </span>
    <strong class="num ng-binding">0</strong>

</span>
<span ng-show="currentUser.getNumFreeQuestionsLeft()==0">
    No
</span>

more free question<span ng-show="currentUser.getNumFreeQuestionsLeft() != 1">s</span>

left!
</p>



<a href="https://www.interviewcake.com/upgrade" class="btn btn-default btn-sm">
    Upgrade Now <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
</a>

</div>

    

    
    <div class="wrapper-hack" ng-init="slug=&#39;inflight-entertainment&#39;">
<div class="card ng-scope" ng-class="{&#39;started&#39;: btnPresses.length &gt; 0}" ng-controller="CardCtrl">

    <div class="sections">
        
    <div>
<span class="question-data" data-difficulty="3" data-meta_desc="Writing a simple recommendation algorithm that helps people choose which movies to watch during flights" data-meta_keywords="" data-name="Inflight Entertainment" data-title="" data-weight="1" data-num-hints="5" data-num-gotchas="2" ng-init="setNumHints(5); setNumGotchas(2); ">
</span>
<div class="section-wrapper ng-isolate-scope section-question" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="question">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="question" hide-heading=""></h3>

    <div class="section section-question" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
<strong>
You've built an in-flight entertainment system with on-demand movie streaming.
</strong>
</p>
<p class="ng-scope">
Users on longer flights like to start a second movie right when their first one ends, but they complain that the plane usually lands before they can see the ending. <strong>So you're building a feature for choosing two movies whose total runtimes will equal the exact flight length.</strong>
</p>
<p class="ng-scope">
Write a function that takes an integer <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span> (in minutes) and <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__a-standard-list"><span class="ng-scope">a list</span></span> of integers <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> (in minutes) and returns a boolean indicating whether there are two numbers in <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> whose sum equals <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span>.
</p>
<p class="ng-scope">
When building your function:
</p>
<ul class="ng-scope">
<li>Assume your users will watch <em>exactly</em> two movies</li>
<li>Don't make your users watch the same movie twice</li>
<li>Optimize for runtime over memory</li>
</ul>
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-gotchas" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="gotchas">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="gotchas" hide-heading="" style="display: block;">Gotchas</h3>

    <div class="section section-gotchas" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope" ng-show="shouldShow()" note="" number="1" type="gotcha" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
We can do this in <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time, where <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> is the length of <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span>.
</p>
</div>
</div>
<div class="note slide ng-isolate-scope" ng-show="shouldShow()" note="" number="2" type="gotcha" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Remember: your users shouldn't watch the same movie twice. <strong>Are you sure your method won’t give a false positive if the <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__standard-list"><span class="ng-scope">list</span></span> has one element that is half <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span></strong>?
</p>
</div>
</div>
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-breakdown" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="breakdown">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="breakdown" hide-heading="" style="display: block;">Breakdown</h3>

    <div class="section section-breakdown" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope highlight-flash" ng-show="shouldShow()" note="" number="1" type="hint" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<strong>How would we solve this by hand?</strong> We know our two movie lengths need to sum to <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span>. So for a given <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>, we need a <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span> that equals <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span> - <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>.
</p>
<p class="ng-scope">
To do this by hand we might go through <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> from beginning to end, treating each item as <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>, and for each of those check if there's a <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span> equal to <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span> - <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>.
</p>
<p class="ng-scope">
<strong>How would we implement this in code?</strong> We could nest two loops (the outer choosing <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>, the inner choosing <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span>). That’d give us a runtime of <span complexity="n^2" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></span></span>. We can do better.
</p>
</div>
</div>
<div class="note slide ng-isolate-scope highlight-flash" ng-show="shouldShow()" note="" number="2" type="hint" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
To bring our runtime down we'll probably need to replace that inner loop (the one that looks for a matching <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span>) with something faster.
</p>
</div>
</div>
<div class="note slide ng-isolate-scope highlight-flash" ng-show="shouldShow()" note="" number="3" type="hint" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
We could sort the <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> first—then we could use <span concept="binary-search" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">binary search</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
<strong>
A binary search algorithm finds an item in a <em>sorted</em> <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> in <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> time.
</strong>
</p>
<p>
A brute force search would walk through the whole <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span>, taking <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time in the worst case.
</p>
<p>
Let's say we have a sorted <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> of numbers. To find a number with a binary search, we:
</p>
<ol>
<li>
<strong>Start with the middle number: is it bigger or smaller than our target number?</strong> Since the <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> is sorted, this tells us if the target would be in the <em>left</em> half or the <em>right</em> half of our <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span>.
</li>
<li>
<strong>We've effectively divided the problem in half</strong>. We can "rule out" the whole half of the <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> that we know doesn't contain the target number.
</li>
<li>
<strong>Repeat the same approach (of starting in the middle) on the new half-size problem</strong>. Then do it again and again, until we either find the number or "rule out" the whole set.
</li>
</ol>
<p>
We can do this recursively, or iteratively. Here's an iterative version:
</p>
<div code-block="concept__binary-search__iterative-binary-search" language="php" translation-highlighting="dynamic" class="ng-isolate-scope"><pre class=" language-python">  <code class=" language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> nums<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># see if target appears in nums</span>

    <span class="token comment" spellcheck="true"># we think of floor_index and ceiling_index as "walls" around</span>
    <span class="token comment" spellcheck="true"># the possible positions of our target, so by -1 below we mean</span>
    <span class="token comment" spellcheck="true"># to start our wall "to the left" of the 0th index</span>
    <span class="token comment" spellcheck="true"># (we *don't* mean "the last index")</span>
    floor_index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    ceiling_index <span class="token operator">=</span> len<span class="token punctuation">(</span>nums<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># if there isn't at least 1 index between floor and ceiling,</span>
    <span class="token comment" spellcheck="true"># we've run out of guesses and the number must not be present</span>
    <span class="token keyword">while</span> floor_index <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> ceiling_index<span class="token punctuation">:</span>

        <span class="token comment" spellcheck="true"># find the index ~halfway between the floor and ceiling</span>
        <span class="token comment" spellcheck="true"># we use integer division, so we'll never get a "half index"</span>
        distance <span class="token operator">=</span> ceiling_index <span class="token operator">-</span> floor_index
        half_distance <span class="token operator">=</span> distance <span class="token operator">/</span> <span class="token number">2</span>
        guess_index <span class="token operator">=</span> floor_index <span class="token operator">+</span> half_distance

        guess_value <span class="token operator">=</span> nums<span class="token punctuation">[</span>guess_index<span class="token punctuation">]</span>

        <span class="token keyword">if</span> guess_value <span class="token operator">==</span> target<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

        <span class="token keyword">if</span> guess_value <span class="token operator">&gt;</span> target<span class="token punctuation">:</span>

            <span class="token comment" spellcheck="true"># target is to the left, so move ceiling to the left</span>
            ceiling_index <span class="token operator">=</span> guess_index

        <span class="token keyword">else</span><span class="token punctuation">:</span>

            <span class="token comment" spellcheck="true"># target is to the right, so move floor to the right</span>
            floor_index <span class="token operator">=</span> guess_index

    <span class="token keyword">return</span> <span class="token boolean">False</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C">C</option><option value="5" label="C++">C++</option><option value="6" label="C#">C#</option><option value="7" selected="selected" label="PHP">PHP</option><option value="8" label="Swift (beta)">Swift (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>
<p>
<strong>How did we know the time cost of binary search was <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span>?</strong>
The only non-constant part of our time cost is the number of times our while loop runs.
Each step of our while loop cuts the range (dictated by <span class="ic-variable ng-isolate-scope" ng-transclude="" var="concept__binary-search__floor-index"><span class="ng-scope">floor_index</span></span> and <span class="ic-variable ng-isolate-scope" ng-transclude="" var="concept__binary-search__ceiling-index"><span class="ng-scope">ceiling_index</span></span>) in half, until our range has just one element left.
</p>
<p>
<strong>So the question is, "how many times must we divide our original <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> size (<span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>) in half until we get down to 1?</strong>
</p>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><mo>∗</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><mo>∗</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><mo>∗</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><mo>∗</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">
n * \frac{1}{2} * \frac{1}{2} * \frac{1}{2} * \frac{1}{2} * ... = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mbin">∗</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mrel">=</span><span class="mord">1</span></span></span></span></span>
<p>
How many <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>'s are there? We don't know yet, but we can call that number <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span>:
</p>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mo>(</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><msup><mo>)</mo><mi>x</mi></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">
n * (\frac{1}{2})^x = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mbin">∗</span><span class="mopen">(</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord">1</span></span></span></span></span>
<p>
Now we solve for <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span>:
</p>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mfrac><mrow><msup><mn>1</mn><mi>x</mi></msup></mrow><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">
n * \frac{1^x}{2^x} = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.86338em;"></span><span class="strut bottom" style="height: 1.20838em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.289em; margin-right: 0.0714286em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord"><span class="mord">1</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.0714286em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mrel">=</span><span class="mord">1</span></span></span></span></span>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∗</mo><mfrac><mrow><mn>1</mn></mrow><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">
n * \frac{1}{2^x} = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.845108em;"></span><span class="strut bottom" style="height: 1.19011em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mbin">∗</span><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.289em; margin-right: 0.0714286em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mrel">=</span><span class="mord">1</span></span></span></span></span>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi></mrow><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">
\frac{n}{2^x} = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.695392em;"></span><span class="strut bottom" style="height: 1.04039em; vertical-align: -0.345em;"></span><span class="base textstyle uncramped"><span class="minner reset-textstyle textstyle uncramped"><span class="mfrac"><span class="vlist"><span class="" style="top: 0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.289em; margin-right: 0.0714286em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span><span class="" style="top: -0.23em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span class="" style="top: -0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span><span class="mrel">=</span><span class="mord">1</span></span></span></span></span>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><msup><mn>2</mn><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">
n = 2^x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.664392em;"></span><span class="strut bottom" style="height: 0.664392em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mrel">=</span><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span>
<p>
Now to get the <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span> out of the exponent. How do we do that? Logarithms.
</p>
<p>
<strong>Recall that <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>log</mo><mrow><mn>1</mn><mn>0</mn></mrow></msub><mrow><mn>1</mn><mn>0</mn><mn>0</mn></mrow></mrow><annotation encoding="application/x-tex">\log_{10}{100}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.93888em; vertical-align: -0.24444em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lo<span style="margin-right: 0.01389em;">g</span></span><span class="vlist"><span class="" style="top: 0.24444em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">1</span><span class="mord">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span></span></span> means, "what power must we raise 10 to, to get 100"? The answer is 2.</strong>
</p>
<p>
So in this case, if we take the <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>log</mo><mrow><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\log_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.93888em; vertical-align: -0.24444em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lo<span style="margin-right: 0.01389em;">g</span></span><span class="vlist"><span class="" style="top: 0.24444em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span> of both sides...
</p>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>log</mo><mrow><mn>2</mn></mrow></msub><mrow><mi>n</mi></mrow><mo>=</mo><msub><mo>log</mo><mrow><mn>2</mn></mrow></msub><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow></mrow><annotation encoding="application/x-tex">
\log_{2}{n} = \log_{2}{2^x}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.93888em; vertical-align: -0.24444em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lo<span style="margin-right: 0.01389em;">g</span></span><span class="vlist"><span class="" style="top: 0.24444em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mrel">=</span><span class="mop"><span class="mop">lo<span style="margin-right: 0.01389em;">g</span></span><span class="vlist"><span class="" style="top: 0.24444em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span></span>
<p>
The right hand side asks, "what power must we raise <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord">2</span></span></span></span></span> to, to get <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">2^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.664392em;"></span><span class="strut bottom" style="height: 0.664392em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord">2</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span></span></span></span></span>?" Well, that's just <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span></span>!
</p>
<span class="ic-math ng-isolate-scope block" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" block="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>log</mo><mrow><mn>2</mn></mrow></msub><mrow><mi>n</mi></mrow><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">
\log_{2}{n} = x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.93888em; vertical-align: -0.24444em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lo<span style="margin-right: 0.01389em;">g</span></span><span class="vlist"><span class="" style="top: 0.24444em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mrel">=</span><span class="mord mathit">x</span></span></span></span></span>
<p>
So there it is. The number of times we must divide <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> in half to get down to 1 is <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mn>2</mn></mrow></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">log_{2}n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.88888em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit">o</span><span class="mord"><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="vlist"><span class="" style="top: 0.15em; margin-right: 0.05em; margin-left: -0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mord mathit">n</span></span></span></span></span>. So our total time cost is <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span>
</p>
<p>
<strong>
Careful: we can only use binary search if the input <span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__binary-search__standard-list"><span class="ng-scope">list</span></span> is <em>already sorted</em>.
</strong>
</p>
<script type="text/javascript">
            var elTranslations = {"words": {"concept__binary-search__standard-list": {"objectivec": "array", "default": "list", "python": "list", "swift": "array", "javascript": "array", "php": "array", "csharp": "array", "ruby": "array", "c": "array", "java": "array", "cpp": "vector"}}, "code-blocks": {"setup": {"php": "$target = 5;\n\n$inputNums = [\n    [1, 2, 3, 4, 5, 6, 7, 7],\n    [1, 2, 3, 4, 5],\n    [],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4, 6, 7, 7]\n];\n\n$expectedOutputs = [\n    true,\n    true,\n    false,\n    false,\n    false\n];", "python": "tests = [\n    [[5, [1,2,3,4,5,6,7,7]], True],\n    [[5, [1,2,3,4,5]], True],\n    [[5, []], False],\n    [[5, [1,2,3,4]], False],\n    [[5, [1,2,3,4,6,7,7]], False],\n]", "csharp": "int target = 5;\n\nint[][] inputNums = new int[][]\n{\n    new[] { 1, 2, 3, 4, 5, 6, 7, 7 },\n    new[] { 1, 2, 3, 4, 5 },\n    new int[] {},\n    new[] { 1, 2, 3, 4 },\n    new[] { 1, 2, 3, 4, 6, 7, 7 }\n};\n\nbool[] expectedOutputs = new[]\n{\n    true,\n    true,\n    false,\n    false,\n    false\n};", "java": "int target = 5;\n\nint[][] inputNums = new int[][]{\n    {1,2,3,4,5,6,7,7},\n    {1,2,3,4,5},\n    {},\n    {1,2,3,4},\n    {1,2,3,4,6,7,7},\n};\n\nboolean[] expectedOutputs = new boolean[]{\n    true,\n    true,\n    false,\n    false,\n    false,\n};", "swift": "let target = 5\n\nlet inputNums = [\n    [1,2,3,4,5,6,7,7],\n    [1,2,3,4,5],\n    [],\n    [1,2,3,4],\n    [1,2,3,4,6,7,7]\n]\n\nlet expectedOutputs = [\n    true,\n    true,\n    false,\n    false,\n    false\n]", "javascript": "var tests = [\n    [[5, [1,2,3,4,5,6,7,7]], true],\n    [[5, [1,2,3,4,5]], true],\n    [[5, []], false],\n    [[5, [1,2,3,4]], false],\n    [[5, [1,2,3,4,6,7,7]], false],\n];", "c": "const int target = 5;\n\nconst int inputNums[5][8] = {\n    {1,2,3,4,5,6,7,7},\n    {1,2,3,4,5},\n    {},\n    {1,2,3,4},\n    {1,2,3,4,6,7,7},\n};\n\nconst size_t inputNumsLength[5] = {8, 5, 0, 4, 7};\n\nconst int expectedOutputs[5] = {1, 1, 0, 0, 0};", "ruby": "tests = [\n    [[5, [1,2,3,4,5,6,7,7]], true],\n    [[5, [1,2,3,4,5]], true],\n    [[5, []], false],\n    [[5, [1,2,3,4]], false],\n    [[5, [1,2,3,4,6,7,7]], false],\n]", "cpp": "const int target = 5;\n\nconst vector<vector<int>> inputNums {\n    vector<int> {1, 2, 3, 4, 5, 6, 7, 7},\n    vector<int> {1, 2, 3, 4, 5},\n    vector<int> {},\n    vector<int> {1, 2, 3, 4},\n    vector<int> {1, 2, 3, 4, 6, 7, 7},\n};\n\nconst vector<bool> expectedOutputs {\n    true,\n    true,\n    false,\n    false,\n    false,\n};"}, "concept__binary-search__iterative-binary-search": {"objectivec": "BOOL ICKBinarySearch(NSNumber *target, NSArray&lt;NSNumber *> *nums) {\n\n    // see if target appears in nums\n    // we think of floorIndex as leftmost edge of the possible positions of our target\n    // and ceilingIndex as \"wall\" on the right of it\n    NSUInteger floorIndex = 0;\n    NSUInteger ceilingIndex = nums.count;\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex &lt; ceilingIndex) {\n\n        // find the index ~halfway between the floor and ceiling\n        // we use integer division, so we'll never get a \"half index\"\n        NSUInteger distance = ceilingIndex - floorIndex;\n        NSUInteger halfDistance = distance / 2;\n        NSUInteger guessIndex = floorIndex + halfDistance;\n\n        NSNumber *guessValue = nums[guessIndex];\n\n        if ([guessValue compare:target] == NSOrderedSame) {\n            return YES;\n        }\n        else if ([guessValue compare:target] == NSOrderedDescending) {\n\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n        }\n        else {\n\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex + 1;\n        }\n    }\n\n    return NO;\n}", "php": {"tests": "while (list($i, $input) = each($inputNums)) {\n    assertEquals(binarySearch($target, $input), $expectedOutputs[$i],\n        \"expected output should match the result of binarySearch call\");\n}", "code": "function binarySearch($target, $nums)\n{\n    // see if target appears in nums\n\n    // we think of floorIndex and ceilingIndex as \"walls\" around\n    // the possible positions of our target, so by -1 below we mean\n    // to start our wall \"to the left\" of the 0th index\n    // (we *don't* mean \"the last index\")\n    $floorIndex = -1;\n    $ceilingIndex = count($nums);\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while ($floorIndex + 1 &lt; $ceilingIndex) {\n\n        // find the index ~halfway between the floor and ceiling\n        // we have to round down, to avoid getting a \"half index\"\n        $distance = $ceilingIndex - $floorIndex;\n        $halfDistance = floor($distance / 2.0);\n        $guessIndex = $floorIndex + $halfDistance;\n\n        $guessValue = $nums[$guessIndex];\n\n        if ($guessValue === $target) {\n            return true;\n        }\n\n        if ($guessValue > $target) {\n\n            // target is to the left, so move ceiling to the left\n            $ceilingIndex = $guessIndex;\n\n        } else {\n\n            // target is to the right, so move floor to the right\n            $floorIndex = $guessIndex;\n        }\n    }\n\n    return false;\n}"}, "python": {"tests": "testInputAndOutputLists(binary_search, tests, True)", "code": "def binary_search(target, nums):\n    # see if target appears in nums\n\n    # we think of floor_index and ceiling_index as \"walls\" around\n    # the possible positions of our target, so by -1 below we mean\n    # to start our wall \"to the left\" of the 0th index\n    # (we *don't* mean \"the last index\")\n    floor_index = -1\n    ceiling_index = len(nums)\n\n    # if there isn't at least 1 index between floor and ceiling,\n    # we've run out of guesses and the number must not be present\n    while floor_index + 1 &lt; ceiling_index:\n\n        # find the index ~halfway between the floor and ceiling\n        # we use integer division, so we'll never get a \"half index\"\n        distance = ceiling_index - floor_index\n        half_distance = distance / 2\n        guess_index = floor_index + half_distance\n\n        guess_value = nums[guess_index]\n\n        if guess_value == target:\n            return True\n\n        if guess_value > target:\n\n            # target is to the left, so move ceiling to the left\n            ceiling_index = guess_index\n\n        else:\n\n            # target is to the right, so move floor to the right\n            floor_index = guess_index\n\n    return False"}, "csharp": {"tests": "for (int i = 0; i < inputNums.Length; i++)\n{\n    AssertEqual(BinarySearch(target, inputNums[i]), expectedOutputs[i]);\n}", "code": "public bool BinarySearch(int target, int[] nums)\n{\n    // See if target appears in nums\n\n    // We think of floorIndex and ceilingIndex as \"walls\" around\n    // the possible positions of our target, so by -1 below we mean\n    // to start our wall \"to the left\" of the 0th index\n    // (we *don't* mean \"the last index\").\n    int floorIndex = -1;\n    int ceilingIndex = nums.Length;\n\n    // If there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex + 1 &lt; ceilingIndex)\n    {\n        // Find the index ~halfway between the floor and ceiling\n        // We use integer division, so we'll never get a \"half index\"\n        int distance = ceilingIndex - floorIndex;\n        int halfDistance = distance / 2;\n        int guessIndex = floorIndex + halfDistance;\n\n        int guessValue = nums[guessIndex];\n\n        if (guessValue == target)\n        {\n            return true;\n        }\n\n        if (guessValue > target)\n        {\n            // Target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n        }\n        else\n        {\n            // Target is to the right, so move floor to the right\n            floorIndex = guessIndex;\n        }\n    }\n\n    return false;\n}"}, "java": {"tests": "for (int n = 0; n < inputNums.length; n++) {\n    assertEqual(t.binarySearch(target, inputNums[n]), expectedOutputs[n]);\n}", "code": "public boolean binarySearch(int target, int[] nums) {\n    // see if target appears in nums\n\n    // we think of floorIndex and ceilingIndex as \"walls\" around\n    // the possible positions of our target, so by -1 below we mean\n    // to start our wall \"to the left\" of the 0th index\n    // (we *don't* mean \"the last index\")\n    int floorIndex = -1;\n    int ceilingIndex = nums.length;\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex + 1 &lt; ceilingIndex) {\n\n        // find the index ~halfway between the floor and ceiling\n        // we use integer division, so we'll never get a \"half index\"\n        int distance = ceilingIndex - floorIndex;\n        int halfDistance = distance / 2;\n        int guessIndex = floorIndex + halfDistance;\n\n        int guessValue = nums[guessIndex];\n\n        if (guessValue == target) {\n            return true;\n        }\n\n        if (guessValue > target) {\n\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n\n        } else {\n\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex;\n        }\n    }\n\n    return false;\n}"}, "swift": {"tests": "for (i, input) in inputNums.enumerated() {\n    try assertEqual(binarySearch(for: target, in: input), expectedOutputs[i])\n}", "code": "func binarySearch(for target: Int, in nums: [Int]) -> Bool {\n    // see if target appears in nums\n\n    // we think of floorIndex and ceilingIndex as \"walls\" around\n    // the possible positions of our target so by -1 below we mean\n    // to start our wall \"to the left\" of the 0th index\n    // (we *don't* mean \"the last index\")\n    var floorIndex = -1\n    var ceilingIndex = nums.count\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while floorIndex + 1 &lt; ceilingIndex {\n\n        // find the index ~halfway between the floor and ceiling\n        // we use integer division, so we'll never get a \"half index\"\n        let distance = ceilingIndex - floorIndex\n        let halfDistance = distance / 2\n        let guessIndex = floorIndex + halfDistance\n\n        let guessValue = nums[guessIndex]\n\n        if guessValue == target {\n            return true\n        }\n\n        if guessValue > target {\n\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex\n        } else {\n\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex\n        }\n    }\n\n    return false\n}"}, "javascript": {"tests": "testInputAndOutputLists(binarySearch, tests, true);", "code": "function binarySearch(target, nums) {\n    // see if target appears in nums\n\n    // we think of floorIndex and ceilingIndex as \"walls\" around\n    // the possible positions of our target, so by -1 below we mean\n    // to start our wall \"to the left\" of the 0th index\n    // (we *don't* mean \"the last index\")\n    var floorIndex = -1;\n    var ceilingIndex = nums.length;\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex + 1 &lt; ceilingIndex) {\n\n        // find the index ~halfway between the floor and ceiling\n        // we have to round down, to avoid getting a \"half index\"\n        var distance = ceilingIndex - floorIndex;\n        var halfDistance = Math.floor(distance / 2);\n        var guessIndex = floorIndex + halfDistance;\n\n        var guessValue = nums[guessIndex];\n\n        if (guessValue === target) {\n            return true;\n        }\n\n        if (guessValue > target) {\n\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n\n        } else {\n\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex;\n        }\n    }\n\n    return false;\n}"}, "c": {"tests": "{\n    size_t i;\n    for (i = 0; i < 5; i++) {\n        int retval = binarySearch(target, inputNums[i], inputNumsLength[i]);\n        ASSERT(retval == expectedOutputs[i]);\n    }\n}", "code": "int binarySearch(int target, const int *nums, size_t numsLength)\n{\n    // see if target appears in nums\n\n    // we think of floorIndex as leftmost edge of the possible positions\n    // of our target and ceilingIndex as \"wall\" on the right of it\n    size_t floorIndex = 0;\n    size_t ceilingIndex = numsLength;\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex &lt; ceilingIndex) {\n        // find the index ~halfway between the floor and ceiling\n        // we use integer division, so we'll never get a \"half index\"\n        size_t distance = ceilingIndex - floorIndex;\n        size_t halfDistance = distance / 2;\n        size_t guessIndex = floorIndex + halfDistance;\n        int guessValue = nums[guessIndex];\n\n        if (guessValue == target) {\n            return 1;\n        }\n\n        if (guessValue > target) {\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n        }\n        else {\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex + 1;\n        }\n    }\n\n    return 0;\n}"}, "ruby": {"tests": "testInputAndOutputLists(method(:binary_search), tests, true)", "code": "def binary_search(target, nums)\n    # see if target appears in nums\n\n    # we think of floor_index and ceiling_index as \"walls\" around\n    # the possible positions of our target, so by -1 below we mean\n    # to start our wall \"to the left\" of the 0th index\n    # (we *don't* mean \"the last index\")\n    floor_index = -1\n    ceiling_index = nums.length\n\n    # if there isn't at least 1 index between floor and ceiling,\n    # we've run out of guesses and the number must not be present\n    while floor_index + 1 &lt; ceiling_index\n\n        # find the index ~halfway between the floor and ceiling\n        # we use integer division, so we'll never get a \"half index\"\n        distance = ceiling_index - floor_index\n        half_distance = distance / 2\n        guess_index = floor_index + half_distance\n\n        guess_value = nums[guess_index]\n\n        return true if guess_value == target\n\n        if guess_value > target\n\n            # target is to the left, so move ceiling to the left\n            ceiling_index = guess_index\n\n        else\n\n            # target is to the right, so move floor to the right\n            floor_index = guess_index\n        end\n    end\n\n    return false\nend"}, "cpp": {"tests": "for (size_t i = 0; i <  inputNums.size(); ++i) {\n    assertEqual(binarySearch(target, inputNums[i]),\n        static_cast<bool>(expectedOutputs[i])); // have to cast due to vector<bool>\n}", "code": "bool binarySearch(int target, const vector&lt;int>& nums)\n{\n    // see if target appears in nums\n\n    // we think of floorIndex as leftmost edge of the possible positions\n    // of our target and ceilingIndex as \"wall\" on the right of it\n    size_t floorIndex = 0;\n    size_t ceilingIndex = nums.size();\n\n    // if there isn't at least 1 index between floor and ceiling,\n    // we've run out of guesses and the number must not be present\n    while (floorIndex &lt; ceilingIndex) {\n\n        // find the index ~halfway between the floor and ceiling\n        // we use integer division, so we'll never get a \"half index\"\n        size_t distance = ceilingIndex - floorIndex;\n        size_t halfDistance = distance / 2;\n        size_t guessIndex = floorIndex + halfDistance;\n\n        int guessValue = nums[guessIndex];\n\n        if (guessValue == target) {\n            return true;\n        }\n\n        if (guessValue > target) {\n            // target is to the left, so move ceiling to the left\n            ceilingIndex = guessIndex;\n        }\n        else {\n            // target is to the right, so move floor to the right\n            floorIndex = guessIndex + 1;\n        }\n    }\n\n    return false;\n}"}}}, "vars": {"concept__binary-search__ceiling-index": {"php": "$ceilingIndex", "camel": "ceilingIndex", "snake": "ceiling_index"}, "concept__binary-search__floor-index": {"php": "$floorIndex", "camel": "floorIndex", "snake": "floor_index"}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>
</div>

</span>
</span> to find <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span> in <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> time instead of <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time. But sorting would cost <span complexity="nlg(n)" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mi>l</mi><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">O(nlg(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></span></span>, and we can do even better than that.
</p>
<p class="ng-scope">
<strong>Could we check for the existence of our <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__second-movie-length"><span class="ng-scope">second_movie_length</span></span> in constant time</strong>?
</p>
</div>
</div>
<div class="note slide ng-isolate-scope highlight-flash" ng-show="shouldShow()" note="" number="4" type="hint" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
What data structure gives us convenient constant-time lookups?
</p>
</div>
</div>
<div class="note slide ng-isolate-scope highlight-flash" ng-show="shouldShow()" note="" number="5" type="hint" style="display: block;">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__a-hash-set-capitalized"><span class="ng-scope">A set</span></span>!
</p>
<p class="ng-scope">
So we could throw all of our <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> into <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__a-hash-set"><span class="ng-scope">a set</span></span> first, in <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time. <em>Then</em> we could loop through our possible <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>s and replace our inner loop with a simple check in our <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__hash-set"><span class="ng-scope">set</span></span>. This'll give us <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> runtime overall!
</p>
<p class="ng-scope">
Of course, we need to add some logic to make sure we're not showing users the same movie twice...
</p>
<p class="ng-scope">
But first, we can tighten this up a bit. Instead of two sequential loops, can we do it all in one loop? (Done carefully, this will give us protection from showing the same movie twice as well.)
</p>
</div>
</div>
<!--
<div note>
<p>
Using a hash, we could start our function by inserting each value in the array as a key in the hash. Then when we iterate through the array looking for the difference between each value and <span var>m</span>, we can just check if the value is a key in our hash. But be careful - we don&#8217;t want to watch the same movie twice! How can we use our hash to prevent that?
</p>
</div>
<div note>
<p>
Since there could be two movies with the same length, it won&#8217;t be enough to just not allow the difference to equal the value we used to find the difference. One way is to make the values in the hash the index of their keys (so the hash is <span var>length_to_index</span>). When we go through the array, we&#8217;ll still check if the difference is a key in the hash, but what else must we check?
</p>
</div>
-->
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-solution slide highlight-flash" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="solution" style="display: block;">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="solution" hide-heading="">Solution</h3>

    <div class="section section-solution" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
We make one pass through <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span>, treating each item as the <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>. At each iteration, we:
</p>
<ol class="ng-scope">
<li>
See if there's a <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__matching-second-movie-length"><span class="ng-scope">matching_second_movie_length</span></span> we've seen already (stored in our <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths-seen"><span class="ng-scope">movie_lengths_seen</span></span> <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__hash-set"><span class="ng-scope">set</span></span>) that is equal to <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__flight-length"><span class="ng-scope">flight_length</span></span> - <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>. If there is, we short-circuit and return <span class="ic-code-inline ng-isolate-scope highlight-flash" ng-transclude="" code-inline="question__inflight-entertainment__true"><span class="ng-scope">True</span></span>.
</li>
<li>
Keep our <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths-seen"><span class="ng-scope">movie_lengths_seen</span></span> <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__hash-set"><span class="ng-scope">set</span></span> up to date by throwing in the current <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span>.
</li>
</ol>
<div code-block="question__inflight-entertainment__solution" language="php" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope highlight-flash" style="width: 100%;"><pre class=" language-python">  <code class=" language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">can_two_movies_fill_flight</span><span class="token punctuation">(</span>movie_lengths<span class="token punctuation">,</span> flight_length<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment" spellcheck="true"># movie lengths we've seen so far</span>
    movie_lengths_seen <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> first_movie_length <span class="token keyword">in</span> movie_lengths<span class="token punctuation">:</span>

        matching_second_movie_length <span class="token operator">=</span> flight_length <span class="token operator">-</span> first_movie_length
        <span class="token keyword">if</span> matching_second_movie_length <span class="token keyword">in</span> movie_lengths_seen<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

        movie_lengths_seen<span class="token punctuation">.</span>add<span class="token punctuation">(</span>first_movie_length<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># we never found a match, so return False</span>
    <span class="token keyword">return</span> <span class="token boolean">False</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-valid ng-dirty ng-valid-parse ng-touched"><option value="0" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C">C</option><option value="5" label="C++">C++</option><option value="6" label="C#">C#</option><option value="7" selected="selected" label="PHP">PHP</option><option value="8" label="Swift (beta)">Swift (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>
<p class="ng-scope">
We know users won't watch the same movie twice because we check <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths-seen"><span class="ng-scope">movie_lengths_seen</span></span> for <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__matching-second-movie-length"><span class="ng-scope">matching_second_movie_length</span></span> <em>before</em> we've put <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__first-movie-length"><span class="ng-scope">first_movie_length</span></span> in it!
</p>
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-complexity slide highlight-flash" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="complexity" style="display: block;">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="complexity" hide-heading="">Complexity</h3>

    <div class="section section-complexity" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
<span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time, and <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> space. Note while optimizing runtime we added a bit of space cost.
</p>
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-bonus slide highlight-flash" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="bonus" style="display: block;">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="bonus" hide-heading="">Bonus</h3>

    <div class="section section-bonus" ng-class="getSectionClass()" ng-transclude="">
<ol class="ng-scope">
<li>
What if we wanted the movie lengths to sum to something <em>close</em> to the flight length (say, within 20 minutes)?

</li>
<li>
What if we wanted to fill the flight length as nicely as possible with <em>any</em> number of movies (not just 2)?

</li>
<li>
What if we knew that <span class="ic-variable ng-isolate-scope highlight-flash" ng-transclude="" var="question__inflight-entertainment__movie-lengths"><span class="ng-scope">movie_lengths</span></span> was <em>sorted</em>? Could we save some space and/or time?

</li>
</ol>
</div>

    
</div>
<div class="section-wrapper ng-isolate-scope section-learnings slide highlight-flash" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="learnings" style="display: block;">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="learnings" hide-heading="">What We Learned</h3>

    <div class="section section-learnings" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
The trick was to use <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__a-hash-set"><span class="ng-scope">a set</span></span> to access our movies <em>by length</em>, in <span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> time.
</p>
<p class="ng-scope">
<strong>Using hash-based data structures, like <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__hash-tables-or-hash-sets">
<span class="ic-words ng-isolate-scope" ng-transclude="" words="hash-tables"><span class="ng-scope">dictionaries</span></span><span class="ng-scope"> or </span><span class="ic-words ng-isolate-scope" ng-transclude="" words="hash-set"><span class="ng-scope">set</span></span><span class="ng-scope">s
            
</span></span>, is <em>so common</em> in coding challenge solutions, it should always be your <em>first</em> thought.</strong> Always ask yourself, right from the start: "Can I save time by using <span class="ic-words ng-isolate-scope highlight-flash" ng-transclude="" words="question__inflight-entertainment__a-hash-table"><span class="ng-scope">a dictionary</span></span>?"
</p>
</div>

    
</div>
<script type="text/javascript">
            var elTranslations = {"words": {"question__inflight-entertainment__a-hash-set-capitalized": {"php": "An array used as a hash table", "default": "A set", "python": "A set", "csharp": "A hash set", "java": "A hash set", "swift": "A set", "javascript": "A set", "c": "A set", "ruby": "A set", "cpp": "An unordered set"}, "question__inflight-entertainment__hash-set": {"php": "array", "default": "set", "python": "set", "csharp": "hash set", "java": "hash set", "swift": "set", "javascript": "set", "c": "set", "ruby": "set", "cpp": "unordered set"}, "question__inflight-entertainment__hash-tables-or-hash-sets": {"php": "hash tables or hash sets", "default": "\n<span words=\"hash-tables\"/> or <span words=\"hash-set\"/>s\n            \n", "python": "\n<span words=\"hash-tables\">dictionaries</span> or <span words=\"hash-set\">set</span>s\n            \n", "csharp": "\n<span words=\"hash-tables\">dictionaries</span> or <span words=\"hash-set\">hash set</span>s\n            \n", "ruby": "\n<span words=\"hash-tables\">hashes</span> or <span words=\"hash-set\">set</span>s\n            \n", "swift": "\n<span words=\"hash-tables\">dictionaries</span> or <span words=\"hash-set\">set</span>s\n            \n", "javascript": "\n<span words=\"hash-tables\">objects</span> or <span words=\"hash-set\">set</span>s\n            \n", "c": "\n<span words=\"hash-tables\">hash tables</span> or <span words=\"hash-set\">set</span>s\n            \n", "java": "\n<span words=\"hash-tables\">hash maps</span> or <span words=\"hash-set\">hash set</span>s\n            \n", "cpp": "\n<span words=\"hash-tables\">unordered maps</span> or <span words=\"hash-set\">unordered set</span>s\n            \n"}, "question__inflight-entertainment__hash-tables": {"python": "dictionaries", "csharp": "dictionaries", "ruby": "hashes", "objectivec": "dictionaries", "swift": "dictionaries", "javascript": "objects", "c": "hash tables", "java": "hash maps", "cpp": "unordered maps", "php": "arrays"}, "question__inflight-entertainment__standard-list": {"objectivec": "array", "default": "list", "python": "list", "swift": "array", "javascript": "array", "php": "array", "csharp": "array", "ruby": "array", "c": "array", "java": "array", "cpp": "vector"}, "question__inflight-entertainment__a-hash-table": {"python": "a dictionary", "csharp": "a dictionary", "ruby": "a hash", "objectivec": "a dictionary", "swift": "a dictionary", "javascript": "an object", "c": "a hash table", "java": "a hash map", "cpp": "an unordered map", "php": "an array"}, "question__inflight-entertainment__a-hash-set": {"php": "an array", "default": "a set", "python": "a set", "csharp": "a set", "ruby": "a set", "swift": "a set", "javascript": "a set", "c": "a set", "java": "a hash set", "cpp": "an unordered set"}, "question__inflight-entertainment__a-standard-list": {"objectivec": "an array", "default": "a list", "python": "a list", "swift": "an array", "javascript": "an array", "php": "an array", "csharp": "an array", "ruby": "an array", "c": "an array", "java": "an array", "cpp": "a vector"}}, "code-inlines": {"question__inflight-entertainment__true": {"python": "True", "c": "1", "default": "true", "objectivec": "YES"}}, "code-blocks": {"setup": {"php": "$tests = [\n    [[[1, 2, 3], 3], true],\n    [[[1, 2, 4, 9], 6], true],\n    [[[1, 2, 4, 9], 8], false],\n    [[[1, 7], 2], false],\n];", "python": "tests = [\n    [[[1, 2, 3], 3], True],\n    [[[1, 2, 4, 9], 6], True],\n    [[[1, 2, 4, 9], 8], False],\n    [[[1, 7], 2], False],\n]", "csharp": "int[][] movieLengths = new int[][]\n{\n    new[] {1, 2, 3},\n    new[] {1, 2, 4, 9},\n    new[] {1, 2, 4, 9},\n    new[] {1, 7},\n};\n\nint[] flightLengths = new[]\n{\n    3,\n    6,\n    8,\n    2,\n};\n\nbool[] expectedOutputs = new[]\n{\n    true,\n    true,\n    false,\n    false,\n};", "java": "int[][] movieLengths = new int[][]{\n    {1, 2, 3},\n    {1, 2, 4, 9},\n    {1, 2, 4, 9},\n    {1, 7},\n};\n\nint[] flightLengths = new int[]{\n    3,\n    6,\n    8,\n    2,\n};\n\nboolean[] expectedOutputs = new boolean[]{\n    true,\n    true,\n    false,\n    false,\n};", "swift": "let movieLengths = [\n    [1, 2, 3],\n    [1, 2, 4, 9],\n    [1, 2, 4, 9],\n    [1, 7]\n]\n\nlet flightLengths = [\n    3,\n    6,\n    8,\n    2,\n]\n\nlet expectedOutputs = [\n    true,\n    true,\n    false,\n    false,\n]", "javascript": "var tests = [\n    [[[1, 2, 3], 3], true],\n    [[[1, 2, 4, 9], 6], true],\n    [[[1, 2, 4, 9], 8], false],\n    [[[1, 7], 2], false],\n];", "c": "const int movieLengths[4][4] = {\n    {1, 2, 3},\n    {1, 2, 4, 9},\n    {1, 2, 4, 9},\n    {1, 7}\n};\n\nconst int movieLengthsLength[4] = {3, 4, 4, 2};\n\nconst int flightLengths[4] = {3, 6, 8, 2};\n\nconst int expectedOutputs[4] = {1, 1, 0, 0};", "ruby": "tests = [\n    [[[1, 2, 3], 3], true],\n    [[[1, 2, 4, 9], 6], true],\n    [[[1, 2, 4, 9], 8], false],\n    [[[1, 7], 2], false],\n]", "cpp": "const vector<vector<int>> movieLengths {\n    vector<int> {1, 2, 3},\n    vector<int> {1, 2, 4, 9},\n    vector<int> {1, 2, 4, 9},\n    vector<int> {1, 7},\n};\n\nconst vector<int> flightLengths {\n    3,\n    6,\n    8,\n    2,\n};\n\nconst vector<bool> expectedOutputs {\n    true,\n    true,\n    false,\n    false,\n};"}, "question__inflight-entertainment__solution": {"objectivec": "BOOL ICKcanTwoMoviesFillFlight(NSArray&lt;NSNumber *> *movieLengths, NSUInteger flightLength) {\n    NSMutableSet *movieLengthsSeen = [NSMutableSet new];\n\n    for (NSNumber *firstMovieLength in movieLengths) {\n        NSUInteger matchingSecondMovieLength = flightLength - firstMovieLength.unsignedIntegerValue;\n\n        if ([movieLengthsSeen containsObject:@(matchingSecondMovieLength)]) {\n            return YES;\n        }\n\n        [movieLengthsSeen addObject:firstMovieLength];\n    }\n\n    return NO;\n}", "php": {"tests": "testInputAndOutputLists('canTwoMoviesFillFlight', $tests, true);", "code": "function canTwoMoviesFillFlight($movieLengths, $flightLength)\n{\n    // movie lengths we've seen so far\n    $movieLengthsSeen = [];\n\n    for ($i = 0; $i &lt; count($movieLengths); $i++) {\n        $firstMovieLength = $movieLengths[$i];\n\n        $matchingSecondMovieLength = $flightLength - $firstMovieLength;\n        if (isset($movieLengthsSeen[$matchingSecondMovieLength])) {\n            return true;\n        }\n\n        $movieLengthsSeen[$firstMovieLength] = true;\n    }\n\n    // we never found a match, so return false\n    return false;\n}"}, "python": {"tests": "testInputAndOutputLists(can_two_movies_fill_flight, tests, True)", "code": "def can_two_movies_fill_flight(movie_lengths, flight_length):\n\n    # movie lengths we've seen so far\n    movie_lengths_seen = set()\n\n    for first_movie_length in movie_lengths:\n\n        matching_second_movie_length = flight_length - first_movie_length\n        if matching_second_movie_length in movie_lengths_seen:\n            return True\n\n        movie_lengths_seen.add(first_movie_length)\n\n    # we never found a match, so return False\n    return False"}, "csharp": {"tests": "for (int i = 0; i < movieLengths.Length; ++i)\n{\n    AssertEqual(CanTwoMoviesFillFlight(movieLengths[i], flightLengths[i]), expectedOutputs[i]);\n}", "code": "using System.Collections.Generic;\n\npublic bool CanTwoMoviesFillFlight(int[] movieLengths, int flightLength)\n{\n    // Movie lengths we've seen so far\n    var movieLengthsSeen = new HashSet&lt;int>();\n\n    foreach (var firstMovieLength in movieLengths)\n    {\n        int matchingSecondMovieLength = flightLength - firstMovieLength;\n        if (movieLengthsSeen.Contains(matchingSecondMovieLength))\n        {\n            return true;\n        }\n\n        movieLengthsSeen.Add(firstMovieLength);\n    }\n\n    // We never found a match, so return false\n    return false;\n}"}, "java": {"tests": "for (int n = 0; n < movieLengths.length; n++) {\n    assertEqual(t.canTwoMoviesFillFlight(movieLengths[n], flightLengths[n]), expectedOutputs[n]);\n}", "code": "public boolean canTwoMoviesFillFlight(int[] movieLengths, int flightLength) {\n\n    // movie lengths we've seen so far\n    Set&lt;Integer> movieLengthsSeen = new HashSet&lt;Integer>();\n\n    for (int firstMovieLength : movieLengths) {\n\n        int matchingSecondMovieLength = flightLength - firstMovieLength;\n        if (movieLengthsSeen.contains(matchingSecondMovieLength)) {\n            return true;\n        }\n\n        movieLengthsSeen.add(firstMovieLength);\n    }\n\n    // we never found a match, so return false\n    return false;\n}"}, "swift": {"tests": "for (i, movies) in movieLengths.enumerated() {\n    try assertEqual(canTwoMovies(in: movies, fillFlight: flightLengths[i]), expectedOutputs[i])\n}", "code": "func canTwoMovies(in movieLengths: [Int], fillFlight flightLength: Int) -> Bool {\n\n    // movie lengths we've seen so far\n    var movieLengthsSeen = Set&lt;Int>()\n\n    for firstMovieLength in movieLengths {\n        let matchingSecondMovieLength = flightLength - firstMovieLength\n        if movieLengthsSeen.contains(matchingSecondMovieLength) {\n            return true\n        }\n\n        movieLengthsSeen.insert(firstMovieLength)\n    }\n\n    // we never found a match, so return false\n    return false\n}"}, "javascript": {"tests": "testInputAndOutputLists(canTwoMoviesFillFlight, tests, true);", "code": "function canTwoMoviesFillFlight(movieLengths, flightLength) {\n\n    // movie lengths we've seen so far\n    var movieLengthsSeen = new Set();\n\n    for (var i = 0; i &lt; movieLengths.length; i++) {\n        var firstMovieLength = movieLengths[i];\n\n        var matchingSecondMovieLength = flightLength - firstMovieLength;\n        if (movieLengthsSeen.has(matchingSecondMovieLength)) {\n            return true;\n        }\n\n        movieLengthsSeen.add(firstMovieLength);\n    }\n\n    // we never found a match, so return false\n    return false;\n}"}, "c": {"tests": "{\n    size_t i;\n    char msg[256];\n    int retval;\n\n    for (i = 0; i < 4; i++) {\n        snprintf(msg, sizeof(msg), \"'canTwoMoviesFillFlight(movieLengths[%lu], movieLengthsLength[%lu], \"\n                 \"flightLengths[%lu]) == expectedOutputs[%lu]'\", i, i, i, i);\n        retval = canTwoMoviesFillFlight(movieLengths[i], movieLengthsLength[i], flightLengths[i]);\n        ASSERT_EQUAL(&retval, &expectedOutputs[i], sizeof(int), msg);\n    }\n}", "code": "// Assume we've implemented a set\nSet * setNew(void);\nint setIn(const Set *set, const void *item, size_t size);\nvoid setInsert(Set *set, const void *item, size_t size);\nvoid setFree(Set *set);\n\nint canTwoMoviesFillFlight(const int *movieLengths, size_t movieLengthsLength,\n                           int flightLength)\n{\n    size_t i;\n    // movie lengths we've seen so far\n    Set *movieLengthsSeen = setNew();\n\n    for (i = 0; i &lt; movieLengthsLength; i++) {\n        int firstMovieLength = movieLengths[i];\n        int matchingSecondMovieLength = flightLength - firstMovieLength;\n        int contains = setIn(movieLengthsSeen,\n                             &matchingSecondMovieLength,\n                             sizeof(int));\n        if (contains) {\n            setFree(movieLengthsSeen);\n            return 1;\n        }\n\n        setInsert(movieLengthsSeen, &firstMovieLength, sizeof(int));\n    }\n\n    setFree(movieLengthsSeen);\n\n    // we never found a match, so return 0\n    return 0;\n}"}, "ruby": {"tests": "testInputAndOutputLists(method(:can_two_movies_fill_flight), tests, true)", "code": "require 'set'\n\ndef can_two_movies_fill_flight(movie_lengths, flight_length)\n\n    # movie lengths we've seen so far\n    movie_lengths_seen = Set.new\n\n    movie_lengths.each do |first_movie_length|\n\n        matching_second_movie_length = flight_length - first_movie_length\n        if movie_lengths_seen.include? matching_second_movie_length\n            return true\n        end\n\n        movie_lengths_seen.add(first_movie_length)\n    end\n\n    # we never found a match, so return False\n    return false\nend"}, "cpp": {"tests": "for (size_t i = 0; i < movieLengths.size(); ++i) {\n    assertEqual(canTwoMoviesFillFlight(movieLengths[i], flightLengths[i]),\n        static_cast<bool>(expectedOutputs[i])); // have to cast explicitly due to vector<bool>\n}", "code": "bool canTwoMoviesFillFlight(const vector&lt;int>& movieLengths, int flightLength)\n{\n    // movie lengths we've seen so far\n    unordered_set&lt;int> movieLengthsSeen;\n\n    for (int firstMovieLength : movieLengths) {\n\n        int matchingSecondMovieLength = flightLength - firstMovieLength;\n        if (movieLengthsSeen.find(matchingSecondMovieLength) != movieLengthsSeen.end()) {\n            return true;\n        }\n\n        movieLengthsSeen.insert(firstMovieLength);\n    }\n\n    // we never found a match, so return false\n    return false;\n}"}}}, "vars": {"question__inflight-entertainment__matching-second-movie-length": {"php": "$matchingSecondMovieLength", "camel": "matchingSecondMovieLength", "snake": "matching_second_movie_length"}, "question__inflight-entertainment__movie-lengths": {"php": "$movieLengths", "camel": "movieLengths", "snake": "movie_lengths"}, "question__inflight-entertainment__second-movie-length": {"php": "$secondMovieLength", "camel": "secondMovieLength", "snake": "second_movie_length"}, "question__inflight-entertainment__first-movie-length": {"php": "$firstMovieLength", "camel": "firstMovieLength", "snake": "first_movie_length"}, "question__inflight-entertainment__flight-length": {"php": "$flightLength", "camel": "flightLength", "snake": "flight_length"}, "question__inflight-entertainment__movie-lengths-seen": {"php": "$movieLengthsSeen", "camel": "movieLengthsSeen", "snake": "movie_lengths_seen"}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>


    </div>

    <div class="btn-sets">

        <p class="prompt ng-binding" ng-bind="getPromptStr()" ng-hide="&#39;full&#39; !== &#39;full&#39; &amp;&amp; endedQuestion">We'll review this one again later.</p>

        <div class="btn-set btn-set-during ng-hide" ng-show="isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="showPress()" id="btn-show" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-down"></span><span class="text ng-binding" ng-bind="getShowBtnText()">Show answer</span></a>
        </div>

        <div class="btn-set btn-set-during ng-hide" ng-show="!isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="haveAnswerPress()" id="btn-got-it" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text ng-binding" ng-bind="getHaveAnswerBtnText()">Yes, check answer!</span></a>
                <a ng-click="dontHaveAnswerPress()" id="btn-hint" class="btn btn-default btn-large" style=""><span class="fa fa-question"></span><span class="text ng-binding" ng-bind="getDontHaveAnswerBtnText()">I give up!</span></a>
        </div>

        
            <div class="btn-set btn-set-after-option ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
                    <a ng-click="feelExpertPress()" id="btn-feel-good" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text">Yes, I'm expert on this</span></a>
                    <a ng-click="dontFeelExpertPress()" id="btn-need-review" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-repeat"></span><span class="text">Not quite, review later</span></a>
            </div>
            <div class="btn-set btn-set-after-must-review" ng-show="getBtnSet()==&#39;after-must-review&#39;">
                    <a ng-click="nextQuestionPress()" id="btn-next" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-right"></span><span class="text">Next question</span></a>
            </div>
        

        <div class="share-btns share-btns-quiz-end ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Solved%20this%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz&amp;title=&amp;summary=Solved%20this%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-linkedin"> </i> Share</a>


        </div>
        <div class="share-btns share-btns-quiz-end" ng-show="getBtnSet()==&#39;after-must-review&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Tough%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/php/inflight-entertainment%3Futm_source%3Dweekly_email%26utm_campaign%3Dweekly_email%26utm_medium%3Demail%26__s%3Dbu1grgb9dbgdjavs6dvz&amp;title=&amp;summary=Tough%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-linkedin"> </i> Share</a>

        </div>

    </div>

    
        <div ng-controller="NotepadCtrl" class="notepad-outer-wrapper ng-scope tab-mode" ng-class="notepadMode" style="bottom: 0px;">
    <div class="notepad-inner-wrapper tab-mode" ng-class="notepadMode">
        <div class="notepad-buttons tab-mode" ng-class="notepadMode">
            <div class="select-language ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;">
                <select ng-model="selectedLanguage" ng-options="language.display_name for language in codemirrorLanguages | orderBy: &#39;dropdown_rank&#39;" ng-change="selectFromLanguageDropdown()" class="ng-pristine ng-untouched ng-valid"><option value="0" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" selected="selected" label="JavaScript">JavaScript</option><option value="4" label="C">C</option><option value="5" label="C++">C++</option><option value="6" label="C#">C#</option><option value="7" label="Objective-C (beta)">Objective-C (beta)</option><option value="8" label="PHP">PHP</option><option value="9" label="Swift (beta)">Swift (beta)</option><option value="10" label="Haskell">Haskell</option><option value="11" label="No syntax">No syntax</option></select>
            </div>
            <span class="tab ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;tab-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;"></span>
            <span class="type-and-look" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;type-and-look-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
            <span class="focus" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;focus-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
        </div>
        <div class="notepad-typing tab-mode" ng-class="{&#39;output-displayed&#39;: outputDisplayed &amp;&amp; selectedLanguage.codewars}">
            <div class="ng-pristine ng-untouched ng-valid cm-s-default CodeMirror" ui-codemirror-opts="editorOptions" ui-refresh="isCodemirrorUpdated" ng-model="userCode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 26px; left: 22px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" not-content="true" style="min-height: 18px;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" not-content="true"></div><div class="CodeMirror-gutter-filler" not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; min-width: 86.9688px; min-height: 29px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.85px;">&nbsp;</div></div><div class="CodeMirror-code"><pre><span style="padding-right: 0.1px;"><span class="cm-variable">Type</span> <span class="cm-variable">code</span><span class="cm-operator">!</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 62px;"></div></div></div>
        </div>

        

        <div class="notepad-run tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars">
            <span class="output-button ng-binding ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="outputDisplayed = !outputDisplayed; codemirrorElement.focus()" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="outputDisplayed || output !== undefined" ng-bind="outputDisplayed ? &#39;HIDE&#39; : &#39;SHOW&#39;">SHOW</span>
            <span class="output-button" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="runCode()" ng-mouseup="isNotepadRelatedElementClicked=false">RUN</span>
        </div>
        <div class="notepad-output tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false">
            <span class="powered-by">
                Code execution powered by Qualified.io
            </span>
            <p class="content output-help ng-binding ng-hide" ng-show="outputHelp" ng-bind="outputHelp"></p>
            <p class="content output ng-binding ng-hide" ng-show="output" ng-bind="output"></p>
            <p class="content output-error ng-binding" ng-bind="outputError"></p>
        </div>

        
    </div>
</div>

    

</div>
</div>



    <div ng-view=""></div>
</div>


    
    
    


    <div id="print-footer">
        <p>
            Want more coding interview help?
        </p>

        <p>
            Check out <span class="url">interviewcake.com</span> for more advice, guides, and practice questions.
        </p>
    </div>

    <div id="footer">

        <a class="newsletter-link" href="https://www.interviewcake.com/free-weekly-coding-interview-problem-newsletter">
            
            Subscribe to our weekly question email list »
        </a>

        <div class="links">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="by-company">
                            <h5>
                                Programming interview questions by company:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/google-interview-questions">Google interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/facebook-interview-questions">Facebook interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/amazon-interview-questions">Amazon interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="by-language">
                            <h5>
                                Programming interview questions by language:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/java-interview-questions">Java interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/python-interview-questions">Python interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/ruby-interview-questions">Ruby interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/javascript-interview-questions">JavaScript interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/cpp-interview-questions">C++ interview questions</a>
                                </li>
                                
                                <li>
                                    <a href="https://www.interviewcake.com/sql-interview-questions">SQL interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/testing-and-qa-interview-questions">Testing and QA interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="social-media">

            <a class="facebook ng-isolate-scope" href="https://www.facebook.com/interviewcake" target="_blank" tracklink="" the-event="FB footer click"><i class="fa fa-facebook"></i></a>
            <a class="twitter ng-isolate-scope" href="https://www.twitter.com/interviewcake" target="_blank" tracklink="" the-event="Twitter footer click"><i class="fa fa-twitter"></i></a>
        </div>

        

            <div itemscope="" itemtype="http://schema.org/Corporation">
                <span class="schemaorghide" itemprop="description">Programming interview practice and tips for software engineers looking for jobs.</span>

                Copyright © 2017
                <span itemprop="name">Cake Labs, Inc.</span> All rights reserved.
                <span class="schemaorghide" itemprop="image">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="logo">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="url">https://www.interviewcake.com</span>
                <span class="schemaorghide" itemprop="telephone">(804) 876-2253</span>

                <address itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>,
                    <span itemprop="addressLocality">New York</span>,
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <address class="schemaorghide" itemprop="location" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="addressLocality">New York</span>
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <div itemprop="location" itemscope="" itemtype="http://schema.org/Place">
                    <div itemprop="geo" itemscope="" itemtype="http://schema.org/GeoCoordinates">
                        <meta itemprop="latitude" content="37.76480">
                        <meta itemprop="longitude" content="-122.41872">
                    </div>
                </div>
            </div>
        
        <div>

            
                <a href="https://www.interviewcake.com/about">About</a>
                |
            
            <a rel="nofollow" href="https://www.interviewcake.com/privacy-policy">Privacy</a>
            |
            <a rel="nofollow" href="https://www.interviewcake.com/terms-and-conditions">Terms</a>
        </div>


        <a class="jobs-link" href="https://www.interviewcake.com/jobs">
            
            Come work with us!
        </a>

    </div>

    

</div> <!-- /"below-nav" -->

    
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/jquery.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/bootstrap.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular-route.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular-cookies.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular-animate.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/katex.min.js"></script>

    

    
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/underscore-min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular-django-rest-resource.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/angular-seo.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/sticky.js"></script>
    

    <script type="text/javascript">
        (function(){
  var FLAGS = {
    'learnings': true,'only_3_free_questions': true,'new_header': true,'allow_anonymous_purchase': true
    },
    SWITCHES = {
    
    },
    SAMPLES = {
    
    };
  window.waffle = {
    "flag_is_active": function waffle_flag(flag_name) {
      
      return !!FLAGS[flag_name];
    },
    "switch_is_active": function waffle_switch(switch_name) {
      
      return !!SWITCHES[switch_name];
    },
    "sample_is_active": function waffle_sample(sample_name) {
      
      return !!SAMPLES[sample_name];
    },
    "FLAGS": FLAGS,
    "SWITCHES": SWITCHES,
    "SAMPLES": SAMPLES
  };
})();

    </script>

    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/base.js"></script>

    
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/prism.min.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/codemirror.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/python.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/ruby.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/javascript.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/clike.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/php.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/swift.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/haskell.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/ui-codemirror.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/jquery.payment.js"></script>
    <script src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/edgeUtils.js"></script>
    




    <script type="text/javascript">
        window.CACHEBUST_QUERY_STR = '?bust=142';
        //TODO: move above into the below
        window.JS_CONSTANTS = {"DEFAULT_C18N_LANGUAGE": {"display_name": "Python", "case_convention": "snake", "prism": "python", "short_name": "python", "dropdown_rank": 1, "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "codewars": "python", "codemirror": "text/x-python"}, "INTEGRATIONS_SETTING_ONLY_INTEGRATIONS_THAT_SUPPORT_FRONT_END_ONLY": {"Facebook Pixel": true, "Adwords": true, "Google Analytics": true, "All": false, "Twitter Ads": true, "Optimizely": true}, "C18N_LANGUAGES": [{"display_name": "Python", "case_convention": "snake", "prism": "python", "short_name": "python", "dropdown_rank": 1, "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "codewars": "python", "codemirror": "text/x-python"}, {"display_name": "Ruby", "case_convention": "snake", "prism": "ruby", "short_name": "ruby", "dropdown_rank": 2, "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "codewars": "ruby", "codemirror": "text/x-ruby"}, {"display_name": "Java", "case_convention": "camel", "prism": "java", "short_name": "java", "dropdown_rank": 3, "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "codewars": "java", "codemirror": "text/x-java"}, {"display_name": "JavaScript", "case_convention": "camel", "prism": "javascript", "short_name": "javascript", "dropdown_rank": 4, "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "codewars": "javascript", "codemirror": "text/javascript"}, {"display_name": "C", "case_convention": "camel", "prism": "c", "short_name": "c", "dropdown_rank": 5, "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "codewars": "c", "codemirror": "text/x-csrc"}, {"display_name": "C++", "case_convention": "camel", "prism": "cpp", "short_name": "cpp", "dropdown_rank": 6, "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "codewars": "cpp", "codemirror": "text/x-c++src"}, {"display_name": "C#", "case_convention": "camel", "prism": "csharp", "short_name": "csharp", "dropdown_rank": 7, "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "codewars": "csharp", "codemirror": "text/x-csharp"}, {"display_name": "PHP", "case_convention": "camel", "prism": "php", "short_name": "php", "dropdown_rank": 9, "notepad_template": "\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n", "codewars": "php", "codemirror": "text/x-php"}, {"display_name": "Swift (beta)", "closest_languages": ["java"], "case_convention": "camel", "prism": "swift", "codewars": "swift", "dropdown_rank": 10, "notepad_template": "import Foundation\n\npublic func myFunction(_ arg: String) -> String {\n    // write the body of your function here\n    return \"running with \\(arg)\"\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nlet testInput = \"test input\"\nprint(myFunction(testInput))\n", "short_name": "swift", "codemirror": "text/x-swift"}], "next_step_type_enum": {"login": "_NEXT_STEP_TYPE_LOGIN_", "done": "_NEXT_STEP_TYPE_DONE_", "purchase": "_NEXT_STEP_TYPE_PURCHASE_", "question": "_NEXT_STEP_TYPE_QUESTION_"}, "CODEMIRROR_LANGUAGES": [{"display_name": "Haskell", "short_name": "haskell", "notepad_template": "myFunction :: String -> String\n-- write the body of your function here\nmyFunction arg = \"running with \" ++ arg\n\nmain = do\n  -- run your function through some test cases here\n  -- remember: debugging is half the battle!\n  let result = myFunction \"test input\"\n  putStrLn result\n", "dropdown_rank": 11, "codewars": "haskell", "codemirror": "text/x-haskell"}, {"dropdown_rank": 12, "prism": "none", "display_name": "No syntax", "short_name": "nolanguage", "codemirror": ""}, {"display_name": "Python", "case_convention": "snake", "prism": "python", "short_name": "python", "dropdown_rank": 1, "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "codewars": "python", "codemirror": "text/x-python"}, {"display_name": "Ruby", "case_convention": "snake", "prism": "ruby", "short_name": "ruby", "dropdown_rank": 2, "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "codewars": "ruby", "codemirror": "text/x-ruby"}, {"display_name": "Java", "case_convention": "camel", "prism": "java", "short_name": "java", "dropdown_rank": 3, "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "codewars": "java", "codemirror": "text/x-java"}, {"display_name": "JavaScript", "case_convention": "camel", "prism": "javascript", "short_name": "javascript", "dropdown_rank": 4, "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "codewars": "javascript", "codemirror": "text/javascript"}, {"display_name": "C", "case_convention": "camel", "prism": "c", "short_name": "c", "dropdown_rank": 5, "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "codewars": "c", "codemirror": "text/x-csrc"}, {"display_name": "C++", "case_convention": "camel", "prism": "cpp", "short_name": "cpp", "dropdown_rank": 6, "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "codewars": "cpp", "codemirror": "text/x-c++src"}, {"display_name": "C#", "case_convention": "camel", "prism": "csharp", "short_name": "csharp", "dropdown_rank": 7, "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "codewars": "csharp", "codemirror": "text/x-csharp"}, {"display_name": "PHP", "case_convention": "camel", "prism": "php", "short_name": "php", "dropdown_rank": 9, "notepad_template": "\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n", "codewars": "php", "codemirror": "text/x-php"}, {"display_name": "Swift (beta)", "closest_languages": ["java"], "case_convention": "camel", "prism": "swift", "codewars": "swift", "dropdown_rank": 10, "notepad_template": "import Foundation\n\npublic func myFunction(_ arg: String) -> String {\n    // write the body of your function here\n    return \"running with \\(arg)\"\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nlet testInput = \"test input\"\nprint(myFunction(testInput))\n", "short_name": "swift", "codemirror": "text/x-swift"}, {"display_name": "Objective-C (beta)", "closest_languages": ["c"], "case_convention": "camel", "prism": "objectivec", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "dropdown_rank": 8, "short_name": "objectivec", "codemirror": "text/x-objectivec"}], "CACHEBUST_QUERY_STR": "?bust=142", "PRISM_LANGUAGES": [{"dropdown_rank": 12, "prism": "none", "display_name": "No syntax", "short_name": "nolanguage", "codemirror": ""}, {"prism": "markup", "display_name": "HTML", "short_name": "html"}, {"prism": "sql", "display_name": "SQL", "short_name": "sql"}, {"display_name": "Python", "case_convention": "snake", "prism": "python", "short_name": "python", "dropdown_rank": 1, "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "codewars": "python", "codemirror": "text/x-python"}, {"display_name": "Ruby", "case_convention": "snake", "prism": "ruby", "short_name": "ruby", "dropdown_rank": 2, "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "codewars": "ruby", "codemirror": "text/x-ruby"}, {"display_name": "Java", "case_convention": "camel", "prism": "java", "short_name": "java", "dropdown_rank": 3, "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "codewars": "java", "codemirror": "text/x-java"}, {"display_name": "JavaScript", "case_convention": "camel", "prism": "javascript", "short_name": "javascript", "dropdown_rank": 4, "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "codewars": "javascript", "codemirror": "text/javascript"}, {"display_name": "C", "case_convention": "camel", "prism": "c", "short_name": "c", "dropdown_rank": 5, "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "codewars": "c", "codemirror": "text/x-csrc"}, {"display_name": "C++", "case_convention": "camel", "prism": "cpp", "short_name": "cpp", "dropdown_rank": 6, "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "codewars": "cpp", "codemirror": "text/x-c++src"}, {"display_name": "C#", "case_convention": "camel", "prism": "csharp", "short_name": "csharp", "dropdown_rank": 7, "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "codewars": "csharp", "codemirror": "text/x-csharp"}, {"display_name": "PHP", "case_convention": "camel", "prism": "php", "short_name": "php", "dropdown_rank": 9, "notepad_template": "\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n", "codewars": "php", "codemirror": "text/x-php"}, {"display_name": "Swift (beta)", "closest_languages": ["java"], "case_convention": "camel", "prism": "swift", "codewars": "swift", "dropdown_rank": 10, "notepad_template": "import Foundation\n\npublic func myFunction(_ arg: String) -> String {\n    // write the body of your function here\n    return \"running with \\(arg)\"\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nlet testInput = \"test input\"\nprint(myFunction(testInput))\n", "short_name": "swift", "codemirror": "text/x-swift"}, {"display_name": "Objective-C (beta)", "closest_languages": ["c"], "case_convention": "camel", "prism": "objectivec", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "dropdown_rank": 8, "short_name": "objectivec", "codemirror": "text/x-objectivec"}]};

        
        window.JS_VARS = {"url_content_type": "question", "questions_fully_attempted": ["product-of-other-numbers", "matching-parens", "js-scope", "permutation-palindrome", "inflight-entertainment", "single-rifle-check", "highest-product-of-3"]};
        

        
    </script>



    

    
    <script type="text/javascript" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/saved_resource"></script>
    <script type="text/javascript">
        Stripe.setPublishableKey('pk_live_4wtgGTkgBtk4YIB9JDjYdOD0');
    </script>
    

    
    
    <div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/nRK_i0jz87x.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div>
    <script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=149278655279066";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>

    <script id="twitter-wjs" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/widgets.js"></script>
    

    
    
        
            <script type="text/ng-template" id="/partials/animation.html"><div class="animation-wrapper">
    <div class="animation" id="Stage-[[getCompId()]]" ng-class="getCompId()">
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/animation_iframe.html"><div class="animation-iframe-wrapper">
    <iframe class="animation-iframe animation-iframe-[[getCompId()]]"></iframe>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/code-inline.html"><span class="ic-code-inline" ng-transclude></span></script>
        
    
        
            <script type="text/ng-template" id="/partials/code-block.html"><pre class="language-[[language]]">
  <code class="language-[[language]]" ng-transclude></code>
</pre>
<span class="warning-message" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage" ng-cloak>

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)"></select>

</div>
<span class="only-content-language" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</script>
        
    
        
            <script type="text/ng-template" id="/partials/complexity.html"><span class="complexity"><span math>O([[getComplexityMarkup()]])</span></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/concept.html"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude></span>
        <span class="show-concept-icon">&#8628;</span>
    </span>

    <div ng-show="showConcept" class="slide concept-explanation" ng-include="conceptPartialUrl">
        Loading...
    </div>

</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/function.html"><span class="ic-function"><span class="name" ng-transclude></span>()</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/heading.html"><h3 class="heading slide" ng-show="shouldShow()" ng-cloak>[[getHeadingText()]]</h3>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/inline-footnote.html"><span class="footnote-wrapper" ng-init="show = false">
    <span class="show-footnote-icon" ng-click="show = !show">&#8628;</span>
    <p class="footnote" ng-transclude ng-show="show">Loading...</p>
</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/loading.html"><div class="Loading">
    Loading...
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/math.html"><span class="ic-math" ng-class="{'block': isBlock()}" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/note.html"><div class="note slide" ng-show="shouldShow()">
    <div class="note-content" ng-transclude>
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/section.html"><div class="section-wrapper" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()">
    <span heading="[[section]]" hide-heading="[[hideHeading]]"></span>

    <div class="section" ng-class="getSectionClass()" ng-transclude>
    </div>

    
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/variable.html"><span class="ic-variable" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/words.html"><span class="ic-words" ng-transclude></span>
</script>
        
    


    <!-- load current-user json with initial http request -->
    <div class="hidden" data-preload-resource="/api/v1/current-user/" data-thejson="{&quot;id&quot;:1230475,&quot;username&quot;:&quot;rattanak.chea&quot;,&quot;email&quot;:&quot;rattanak.chea@gmail.com&quot;,&quot;date_joined&quot;:&quot;2015-03-09T05:53:40.836403+00:00&quot;,&quot;first_name&quot;:&quot;Rattanak&quot;,&quot;last_name&quot;:&quot;Chea&quot;,&quot;full_name&quot;:&quot;Rattanak Chea&quot;,&quot;short_name&quot;:&quot;Rattanak&quot;,&quot;is_anonymous&quot;:false,&quot;is_on_last_question&quot;:false,&quot;percent_done&quot;:0,&quot;num_questions_done&quot;:0,&quot;num_questions_remaining&quot;:44,&quot;recruiting_is_interested_in_intros&quot;:null,&quot;is_full_access&quot;:false,&quot;first_payment_date&quot;:null,&quot;last_payment_date&quot;:null,&quot;num_free_questions_left&quot;:0,&quot;terms_has_agreed_to_latest&quot;:false,&quot;preferred_content_language&quot;:&quot;php&quot;,&quot;preferred_notepad_language&quot;:&quot;javascript&quot;,&quot;is_staff&quot;:false,&quot;auth_providers_human_readable_list&quot;:&quot;Github and Google&quot;,&quot;num_auth_providers&quot;:2,&quot;auth_email&quot;:&quot;rattanak.chea@gmail.com&quot;,&quot;profile_public_id&quot;:null}">
        {"id":1230475,"username":"rattanak.chea","email":"rattanak.chea@gmail.com","date_joined":"2015-03-09T05:53:40.836403+00:00","first_name":"Rattanak","last_name":"Chea","full_name":"Rattanak Chea","short_name":"Rattanak","is_anonymous":false,"is_on_last_question":false,"percent_done":0,"num_questions_done":0,"num_questions_remaining":44,"recruiting_is_interested_in_intros":null,"is_full_access":false,"first_payment_date":null,"last_payment_date":null,"num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"php","preferred_notepad_language":"javascript","is_staff":false,"auth_providers_human_readable_list":"Github and Google","num_auth_providers":2,"auth_email":"rattanak.chea@gmail.com","profile_public_id":null}
    </div>

    

    <!-- Login Modal -->
    <div ng-controller="LoginModalCtrl" class="modal fade login-modal ng-scope" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="Log In" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <h3 ng-bind="note" class="ng-binding">Log in to continue</h3>
                    <button type="button" ng-show="closeable" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <div class="login-btns">
    <a ng-href="/auth/login/github/?next=%2Fnext" class="btn btn-soc-github" href="https://www.interviewcake.com/auth/login/github/?next=%2Fnext"><i class="fa fa-github"></i> | Log in with Github</a>
    <a ng-href="/auth/login/google-oauth2/?next=%2Fnext" class="btn btn-soc-google-plus" href="https://www.interviewcake.com/auth/login/google-oauth2/?next=%2Fnext"><i class="fa my-fa-google-plus"></i> | Log in with Google</a>
    <a ng-href="/auth/login/facebook/?next=%2Fnext" class="btn btn-soc-facebook" href="https://www.interviewcake.com/auth/login/facebook/?next=%2Fnext"><i class="fa my-fa-facebook"></i> | Log in with Facebook</a>
</div>
<p class="login-reassurance">
    <small>
        We'll never post on your wall or message your friends.
    </small>
</p>

                </div>
            </div>
        </div>
    </div>


    

    <input type="hidden" name="csrfmiddlewaretoken" value="Ovh8XwcjLgdoNJ3ceEOJUfQI0DICBZY7HKEg0gt4SPiyYbtxudZlelBoGILVAnVI">
<div id="loading">
. . .
</div>


<link href="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/css(1)" rel="stylesheet" type="text/css">

<iframe name="stripeXDM_default773648_provider" id="stripeXDM_default773648_provider" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/channel.html" frameborder="0" style="position: absolute; top: -2000px; left: 0px;"></iframe><iframe data-olark="true" id="onloadstaticolarkcomjsclientappjs-frame" style="width: 0px; height: 0px; position: absolute; left: 0px; bottom: 0px; border: none;" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/saved_resource(1).html"></iframe><iframe id="rufous-sandbox" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: none;" title="Twitter analytics iframe" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/saved_resource(2).html"></iframe><div data-olark="true"><div id="olark-wrapper" class="" data-reactid=".0"><style rel="stylesheet" type="text/css" data-reactid=".0.0">#olark-wrapper .olark-launch-button {
  background-color: #59a8c4 !important;
}
#olark-wrapper .olark-launch-button svg path {
  fill: #ffffff !important;
}
#olark-wrapper .olark-launch-button .olark-button-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
  border-color: #469dbe !important;
}
#olark-wrapper .olark-top-bar-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar-arrow {
  fill: #ffffff !important;
}
#olark-wrapper .olark-end-chat-button {
  color: #ffffff !important;
  background-color: rgba(61, 143, 174, 0.5) !important;
}
#olark-wrapper .olark-end-chat-button:hover {
  background-color: #3d8fae !important;
}
#olark-wrapper #olark-container .olark-visitor-message {
  background-color: rgba(89, 168, 196, 0.25) !important;
  border: none !important;
}
#olark-wrapper #olark-container .olark-form-send-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-feedback-form-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-restart-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-cancel-button {
  background-color: #59a8c4 !important;
  border: none !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-go-button {
  border: none !important;
  background: rgba(89, 168, 196, 0.35) !important;
}
#olark-wrapper #olark-container .olark-send-transcript-container .olark-send-transcript-form.olark-inline-form-valid .olark-form-input-container {
  border-color: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-send-transcript-container .olark-send-transcript-form.olark-inline-form-valid .olark-send-icon {
  fill: #59a8c4 !important;
}
#olark-wrapper .olark-end-chat-flag {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-confirmation-icon .olark-launch-button-icon {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-input:focus {
  border-color: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-message-input:focus {
  border-color: #59a8c4 !important;
}
</style><button class="olark-launch-button olark-size-md" data-reactid=".0.2"><svg x="0px" y="0px" viewBox="0 0 28 18" data-reactid=".0.2.0"><path fill="#ffffff" d="M28,3.2C28,1.5,26.5,0,24.8,0H3.2C1.5,0,0,1.5,0,3.2v11.5C0,16.5,1.5,18,3.2,18h21.5c1.8,0,3.2-1.5,3.2-3.2 V3.2z M24.7,14.8c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.4-0.1-0.6-0.3l-5-5.3l-3.6,3c-0.3,0.2-0.6,0.3-0.9,0.3s-0.7-0.1-0.9-0.4l-3.6-3 l-5,5.3c-0.2,0.2-0.4,0.3-0.6,0.3c-0.2,0-0.4-0.1-0.6-0.2c-0.3-0.3-0.4-0.8,0-1.2l4.9-5.3L3.3,4.5C3,4.2,2.9,3.6,3.2,3.3 C3.5,2.9,4,2.9,4.4,3.2l9.6,7.9l9.6-7.9c0.4-0.3,0.9-0.2,1.2,0.1c0.3,0.4,0.2,0.9-0.1,1.2l-4.8,3.9l4.9,5.3 C25.1,14,25,14.5,24.7,14.8z" data-reactid=".0.2.0.0"></path></svg><div class="olark-notification-badge olark-hidden" data-reactid=".0.2.1"><div class="olark-notification-badge-text" data-reactid=".0.2.1.0">0</div></div><p class="olark-button-text olark-hidden" data-reactid=".0.2.2">Send me a message!</p></button><div id="olark-container" class="olark-hidden olark-no-branding olark-size-md" data-reactid=".0.3"><div class="olark-top-bar" data-reactid=".0.3.0"><div class="olark-top-bar-text" data-reactid=".0.3.0.0">Send me a message!</div><div class="olark-top-bar-button" data-reactid=".0.3.0.1"><svg viewBox="0 0 15.1 8.9" fill="#ffffff" data-reactid=".0.3.0.1.0"><polygon class="olark-top-bar-arrow" points="0.2,1.4 7.6,8.9 15.1,1.4 13.7,0 7.6,6 1.6,0" data-reactid=".0.3.0.1.0.0"></polygon></svg></div></div><div class="olark-conversation-container olark-form-conversation-container olark-no-message-form olark-offline-message-container" data-reactid=".0.3.1"><div class="olark-form-message" data-reactid=".0.3.1.0">Parker from Interview Cake here. You can reach my email inbox through this handy form!</div><div class="olark-form-container" data-reactid=".0.3.1.1"><form class="olark-form" novalidate="" data-reactid=".0.3.1.1.0"><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$fname"><input type="text" name="fname" class="olark-form-input-filled olark-form-input" id="olark-form-input-fname" placeholder="" tabindex="1" autocomplete="on" value="Rattanak Chea" required="" data-reactid=".0.3.1.1.0.0:$fname.0"><label class="olark-float-label" for="olark-form-input-fname" data-reactid=".0.3.1.1.0.0:$fname.1">click here and type your Name</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$fname.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$fname.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$fname.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$email"><input type="email" name="email" class="olark-form-input-filled olark-form-input" id="olark-form-input-email" placeholder="" tabindex="2" autocomplete="on" value="rattanak.chea@gmail.com" required="" data-reactid=".0.3.1.1.0.0:$email.0"><label class="olark-float-label" for="olark-form-input-email" data-reactid=".0.3.1.1.0.0:$email.1">click here and type your Email</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$email.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$email.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$email.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$body"><div data-reactid=".0.3.1.1.0.0:$body.0"><div class="olark-form-message-input olark-clone-textarea" data-reactid=".0.3.1.1.0.0:$body.0.0" style="width: 330px !important; overflow-wrap: break-word;"></div><textarea class="olark-form-message-input" tabindex="3" name="body" id="olark-form-input-body" placeholder="" title="" required="" data-reactid=".0.3.1.1.0.0:$body.0.1" style="height: 31px !important;"></textarea></div><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$body.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$body.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$body.2.0.0"></path></svg></span></div><button class="olark-form-send-button" type="submit" data-reactid=".0.3.1.1.0.2">Send</button></form></div></div></div></div></div><div id="pkt_ext_master" class="pkt_ext_container pkt_ext_container_inactive"><div id="pkt_ext_save_plate"><div class="pkt_ext_component_save">

    <div class="pkt_ext_save_details pkt_ext_platter">
        <div class="pkt_ext_save_toolbar">
            <div class="pkt_ext_toolbar_main">
                <div class="pkt_ext_logo">
                    <svg class="pkt_ext_icon" viewBox="0 0 22 22"><path d="M21.79,2.55a2,2,0,0,0-1.86-1.3H2.08a2,2,0,0,0-2,2V9.82l0.08,1.31a10.66,10.66,0,0,0,4.25,7.4l0.13,0.1,0,0a10.79,10.79,0,0,0,4.26,1.89,10.92,10.92,0,0,0,4.18,0l0.24,0,0.07,0a10.79,10.79,0,0,0,4.09-1.85l0,0,0.13-.1a10.66,10.66,0,0,0,4.25-7.4L21.9,9.82V3.23A2,2,0,0,0,21.79,2.55ZM17.18,9.42L12,14.34a1.49,1.49,0,0,1-2.07,0L4.85,9.42A1.5,1.5,0,0,1,6.92,7.26L11,11.19l4.09-3.93A1.5,1.5,0,0,1,17.18,9.42Z"></path></svg>
                </div>
                <div class="pkt_ext_logo_action_copy">Tags Saved</div>
                <div class="pkt_ext_actions">
                    <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" alt="Archive Page" class="pkt_ext_action_overflow simple-tooltip">
                        <svg class="pkt_ext_icon" viewBox="0 0 100 100">
                            <path d="M15 40c5.46 0 10 4.54 10 10s-4.54 10-10 10S5 55.46 5 50s4.54-10 10-10zm60 10c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10zm-35 0c0 5.46 4.54 10 10 10s10-4.54 10-10-4.54-10-10-10-10 4.54-10 10z"></path>
                        </svg>
                    </a>
                    <ul class="pkt_ext_overflow">
                        <li class="pkt_ext_overflow_item">
                            <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" alt="Archive Page" class="pkt_ext_action_archive simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16"><polygon points="1 9 3 7 6 10 14.02 2.02 16 4 6 14.02 1 9"></polygon></svg>
                                Archive Page
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item divider">
                            <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" alt="Remove Page" class="pkt_ext_action_removeitem simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                    <path d="M12,3V1H4V3H1V5H15V3ZM5,2h6V3H5V2Z"></path>
                                    <polygon points="3.01 16 13.03 16 13.03 6 3.03 6 3.01 16"></polygon>
                                </svg>
                                Remove Page
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item">
                            <a alt="Open Pocket" href="http://getpocket.com/a" target="_blank" class="pkt_ext_action_home simple-tooltip">
                                <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                    <path d="M14.05,13.95v-4a1,1,0,0,0-2,0V13h-9V5H6A1,1,0,0,0,6,3h-4a1,1,0,0,0-1,1V14a1,1,0,0,0,1,1h11a1,1,0,0,0,1-1s0,0,0,0h0Z"></path>
                                    <path d="M15.06,1h-5a1,1,0,1,0,0,2h1.58L6.17,8.28A1,1,0,1,0,7.56,9.72l5.5-5.31V6a1,1,0,0,0,2,0V2h0V1Z"></path>
                                </svg>
                                Open Pocket
                            </a>
                        </li>
                        <li class="pkt_ext_overflow_item">
                            <a alt="Open Settings" href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" class="pkt_ext_action_options simple-tooltip">
                               <svg class="pkt_ext_icon" viewBox="0 0 16 16">
                                  <path d="M15,9V7H13.4a5.53,5.53,0,0,0-1-2.21l1.39-1.39L12.41,2,11,3.41l0,0A5.45,5.45,0,0,0,9,2.6V1H7V2.6a5.49,5.49,0,0,0-2.22.95L3.41,2.18,2,3.59,3.4,5a5.48,5.48,0,0,0-.8,2H1V9H2.61a5.53,5.53,0,0,0,.8,2L2,12.41l1.41,1.41,1.38-1.38A5.46,5.46,0,0,0,7,13.4V15H9V13.39a5.53,5.53,0,0,0,2-.81L12.41,14l1.41-1.41L12.44,11.2a5.46,5.46,0,0,0,1-2.2H15ZM8,10.29A2.29,2.29,0,1,1,10.29,8,2.29,2.29,0,0,1,8,10.29Z"></path>
                                </svg>
                                Settings
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="pkt_ext_tag_detail">
                <div id="pkt_ext_tag_input_wrapper" class="pkt_ext_tag_input_wrapper"><span class="taggle_placeholder" style="opacity: 0;">Add Tags</span><ul class="taggle_list"><li class="taggle "><span class="taggle_text">interview</span><button class="close">×</button><input type="hidden" value="interview" name="taggles[]"></li><li><input type="text" class="taggle_input" tabindex="1" autocomplete="off" style="width: 10px;"></li></ul><div class="taggle_sizer" style="font-size: 14px;"></div><div class="autocomplete-suggestions " style="display: none;"><div class="autocomplete-suggestion  selected" data-val="interview"><b>interview</b></div></div></div>
                <div id="pkt_ext_no_suggestions"></div>
                <ul id="pkt_ext_suggested_tags" class="suggested_tags"></ul>
            </div>
        </div>
    </div>

    <div id="pkt_ext_save_recs" class=""><div class="pkt_ext_recommendations pkt_ext_platter pkt_ext_loaded" id="pkt_ext_recommendations">
    <div class="pkt_ext_loading" id="recommendations-trigger">
        <div class="pkt_ext_loader">
            <div class="loader-inner ball-clip-rotate-pulse">
                <div></div>
                <div></div>
            </div>
        </div>
        Loading recommendations
    </div>
    <div id="pkt_ext_recommendations_list"><div class="pkt_ext_recs_header">Explore Pocket's recommendations:</div>
<ul class="pkt_ext_recommendations_list">
        <li class="pkt_ext_recommendation pkt_ext_has_image" rec_url="https://www.nytimes.com/2016/05/26/technology/microsoft-smartphone-layoffs.html" rec_title="Microsoft Cutting 1,850 Jobs in Smartphone Unit" rec_id="1299270568" rec_source="1683334114" rec_position="0">
            <div class="pkt_ext_rec_image" style="background-image:url(&#39;https://static01.nyt.com/images/2016/05/26/business/26MICROSOFT/26MICROSOFT-master768.jpg&#39;); background-size:cover; background-position:center center;" data-imgsrc="https://static01.nyt.com/images/2016/05/26/business/26MICROSOFT/26MICROSOFT-master768.jpg"></div>
            <div class="pkt_ext_rec_title">
                <a class="pkt_ext_rec_open" target="_blank" href="https://www.nytimes.com/2016/05/26/technology/microsoft-smartphone-layoffs.html">Microsoft Cutting 1,850 Jobs in Smartphone Unit</a>
                <div class="pkt_ext_rec_source">nytimes.com</div>
            </div>
            <div class="pkt_ext_rec_details">
                <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" class="pkt_ext_rec_save"><svg class="pkt_ext_icon pkt_ext_icon_save" viewBox="0 0 22 22"><path d="M21.79,2.55a2,2,0,0,0-1.86-1.3H2.08a2,2,0,0,0-2,2V9.82l0.08,1.31a10.66,10.66,0,0,0,4.25,7.4l0.13,0.1,0,0a10.79,10.79,0,0,0,4.26,1.89,10.92,10.92,0,0,0,4.18,0l0.24,0,0.07,0a10.79,10.79,0,0,0,4.09-1.85l0,0,0.13-.1a10.66,10.66,0,0,0,4.25-7.4L21.9,9.82V3.23A2,2,0,0,0,21.79,2.55ZM17.18,9.42L12,14.34a1.49,1.49,0,0,1-2.07,0L4.85,9.42A1.5,1.5,0,0,1,6.92,7.26L11,11.19l4.09-3.93A1.5,1.5,0,0,1,17.18,9.42Z"></path></svg><span class="pkt_ext_save_copy">Save</span> </a>
            </div>
        </li>
        <li class="pkt_ext_recommendation pkt_ext_has_image" rec_url="https://www.tripit.com/blog/2015/02/best-apps-for-inflight-entertainment.html" rec_title="Best Apps for Inflight Entertainment" rec_id="833993072" rec_source="1683334114" rec_position="1">
            <div class="pkt_ext_rec_image" style="background-image:url(&#39;https://www.tripit.com/blog/wp-content/uploads/2015/01/appsforflights.jpg&#39;); background-size:cover; background-position:center center;" data-imgsrc="https://www.tripit.com/blog/wp-content/uploads/2015/01/appsforflights.jpg"></div>
            <div class="pkt_ext_rec_title">
                <a class="pkt_ext_rec_open" target="_blank" href="https://www.tripit.com/blog/2015/02/best-apps-for-inflight-entertainment.html">Best Apps for Inflight Entertainment</a>
                <div class="pkt_ext_rec_source">tripit.com</div>
            </div>
            <div class="pkt_ext_rec_details">
                <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" class="pkt_ext_rec_save"><svg class="pkt_ext_icon pkt_ext_icon_save" viewBox="0 0 22 22"><path d="M21.79,2.55a2,2,0,0,0-1.86-1.3H2.08a2,2,0,0,0-2,2V9.82l0.08,1.31a10.66,10.66,0,0,0,4.25,7.4l0.13,0.1,0,0a10.79,10.79,0,0,0,4.26,1.89,10.92,10.92,0,0,0,4.18,0l0.24,0,0.07,0a10.79,10.79,0,0,0,4.09-1.85l0,0,0.13-.1a10.66,10.66,0,0,0,4.25-7.4L21.9,9.82V3.23A2,2,0,0,0,21.79,2.55ZM17.18,9.42L12,14.34a1.49,1.49,0,0,1-2.07,0L4.85,9.42A1.5,1.5,0,0,1,6.92,7.26L11,11.19l4.09-3.93A1.5,1.5,0,0,1,17.18,9.42Z"></path></svg><span class="pkt_ext_save_copy">Save</span> </a>
            </div>
        </li>
        <li class="pkt_ext_recommendation pkt_ext_has_image" rec_url="https://www.sofi.com/blog/psychologists-explain-how-money-affect-mind/" rec_title="Psychologists Explain How Money Affects the Mind" rec_id="1526069557" rec_source="1683334114" rec_position="2" impression_id="42480752650240ba921b5f65ec4674c5_91bb0e40">
            <div class="pkt_ext_rec_image" style="background-image:url(&#39;https://cdn.adsnative.com/media/nw-727/650cef2a-26fd-4dbd-8b54-4ab53bd9ab6a.jpg&#39;); background-size:cover; background-position:center center;" data-imgsrc="https://cdn.adsnative.com/media/nw-727/650cef2a-26fd-4dbd-8b54-4ab53bd9ab6a.jpg"></div>
            <div id="pkt_ext_spoc" class="pkt_ext_spoc">
                <a href="https://getpocket.com/@SoFi"><img class="pkt_ext_spoc_avatar" src="./Inflight Entertainment (Practice Interview Question) _ Interview Cake_files/7810cedfea7860a3785567cc70e5ec3c4887970.jpg">SoFi </a><div class="pkt_ext_spoc_label" id="pkt_ext_spoc_label">Sponsored <svg class="pkt_ext_down_arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 14 16"><path d="M13.64,4.33a1.32,1.32,0,0,0-1.75,0L7,9.26,2.11,4.33a1.32,1.32,0,0,0-1.75,0,1.07,1.07,0,0,0,0,1.6L6,11.67A1.29,1.29,0,0,0,7,12a1.29,1.29,0,0,0,1-.33l5.69-5.74A1.07,1.07,0,0,0,13.64,4.33Z"></path></svg></div>
                <ul class="pkt_ext_spoc_dropdown">
        
                    <li class="pkt_ext_spoc_dropdown_item" val="0">
                        <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" id="pkt_ext_spoc_hide_this" class="rec-overflow-hide-this">
                        <svg class="overflow_icon icon_hide_this" viewBox="0 0 25 25"><path d="M14.854,12.536l3.814-3.825c0.644-0.645,0.643-1.689-0.003-2.333s-1.689-0.643-2.333,0.003 l-3.81,3.818L8.668,6.335C8.024,5.689,6.98,5.688,6.335,6.332S5.688,8.019,6.332,8.665l3.86,3.871l-3.743,3.753 c-0.644,0.645-0.643,1.689,0.003,2.333s1.689,0.643,2.333-0.003l3.737-3.747l3.783,3.793c0.322,0.323,0.745,0.485,1.168,0.485 c0.422,0,0.843-0.161,1.165-0.482c0.646-0.644,0.646-1.688,0.003-2.333L14.854,12.536z"></path></svg>
                        Hide This </a>
                    </li>
                    <li class="pkt_ext_spoc_dropdown_item" val="1">
                        <a href="https://help.getpocket.com/customer/portal/articles/2061219" target="_blank" class="rec-overflow-aboutsponsor">
                        <svg class="overflow_icon icon_about_sponsor" viewBox="0 0 25 25"><path d="M21.656,20.083c-0.016-0.011-1.206-0.842-1.96-2.403c1.205-1.435,1.93-3.229,1.93-5.183 c0-4.694-4.141-8.5-9.25-8.5s-9.25,3.806-9.25,8.5s4.141,8.5,9.25,8.5c1.46,0,2.835-0.319,4.063-0.873 c1.054,0.47,2.545,0.878,4.551,0.878c0.131,0,0.264-0.002,0.399-0.005c0.217-0.006,0.405-0.151,0.466-0.359 C21.916,20.43,21.835,20.205,21.656,20.083z M10.261,10.554L9.013,9.153c0.816-0.955,2.047-1.493,3.372-1.493 c1.986,0,3.203,1.001,3.203,2.433c0,2.248-2.571,2.417-2.571,3.71c0,0.119,0.03,0.241,0.077,0.351H11.19 c-0.049-0.178-0.083-0.365-0.083-0.567c0-1.832,2.248-2.048,2.248-3.11c0-0.477-0.354-0.877-1.201-0.877 C11.385,9.599,10.738,9.984,10.261,10.554z M12.354,18.252c-0.677,0-1.247-0.57-1.247-1.247c0-0.677,0.57-1.247,1.247-1.247 c0.677,0,1.247,0.57,1.247,1.247C13.601,17.682,13.032,18.252,12.354,18.252z"></path></svg>
                            About Sponsored Posts
                        </a>
                    </li>
                    <li class="pkt_ext_spoc_dropdown_item last" val="2">
                        <a href="https://getpocket.com/premium/hide_sponsorship" target="_blank" class="rec-overflow-hidesponsor">
                        <svg class="overflow_icon icon_hide_all" viewBox="0 0 25 25"><path d="M20.978,6.137C20.609,4.66,16.958,3.5,12.506,3.5c-4.452,0-8.102,1.16-8.472,2.637C4.019,6.198,4.01,6.259,4.006,6.321 l0,0.063L4,16.478c0,0.423,0.252,0.813,0.677,1.043l2.253,1.214l3.675,1.98l1.103,0.594c0.235,0.125,0.506,0.192,0.784,0.192 c0.275,0,0.544-0.065,0.781-0.19l1.02-0.543l3.698-1.97l2.309-1.23c0.358-0.19,0.593-0.495,0.662-0.839 C20.986,16.639,21,16.549,21,16.455V6.383V6.234C20.995,6.202,20.986,6.169,20.978,6.137z M16.337,11.467l-5.352,5.944 c-0.054,0.06-0.133,0.092-0.214,0.092c-0.037,0-0.074-0.007-0.109-0.021l-0.007-0.003l-0.132-0.052 c-0.132-0.052-0.199-0.188-0.152-0.313l1.407-3.77H8.942c-0.107,0-0.204-0.056-0.25-0.145c-0.046-0.088-0.032-0.193,0.036-0.268 l5.377-5.962c0.087-0.097,0.239-0.12,0.357-0.056l0.125,0.069c0.111,0.061,0.161,0.185,0.119,0.298l-1.418,3.774h2.834 c0.107,0,0.204,0.056,0.25,0.144C16.419,11.287,16.404,11.392,16.337,11.467z"></path></svg>
                            Hide All Sponsored Posts
                        </a>
                    </li>
        
                </ul>
            </div>
            <div class="pkt_ext_rec_title">
                <a class="pkt_ext_rec_open" target="_blank" href="https://getpocket.com/redirect?&amp;url=https%3A%2F%2Fad.doubleclick.net%2Fddm%2Ftrackclk%2FN481802.2170301POCKET%2FB10762260.144838678%3Bdc_trk_aid%3D316559237%3Bdc_trk_cid%3D77792040%3Bdc_lat%3D%3Bdc_rdid%3D%3Btag_for_child_directed_treatment%3D&amp;h=5f1be1348028862c3d0deb7c69be6da774bc2a1a17e687f6cd72824fc818c32f">Psychologists Explain How Money Affects the Mind</a>
                <div class="pkt_ext_rec_source">sofi.com</div>
            </div>
            <div class="pkt_ext_rec_details">
                <a href="https://www.interviewcake.com/question/python/inflight-entertainment?utm_source=weekly_email&amp;utm_campaign=weekly_email&amp;utm_medium=email#" class="pkt_ext_rec_save"><svg class="pkt_ext_icon pkt_ext_icon_save" viewBox="0 0 22 22"><path d="M21.79,2.55a2,2,0,0,0-1.86-1.3H2.08a2,2,0,0,0-2,2V9.82l0.08,1.31a10.66,10.66,0,0,0,4.25,7.4l0.13,0.1,0,0a10.79,10.79,0,0,0,4.26,1.89,10.92,10.92,0,0,0,4.18,0l0.24,0,0.07,0a10.79,10.79,0,0,0,4.09-1.85l0,0,0.13-.1a10.66,10.66,0,0,0,4.25-7.4L21.9,9.82V3.23A2,2,0,0,0,21.79,2.55ZM17.18,9.42L12,14.34a1.49,1.49,0,0,1-2.07,0L4.85,9.42A1.5,1.5,0,0,1,6.92,7.26L11,11.19l4.09-3.93A1.5,1.5,0,0,1,17.18,9.42Z"></path></svg><span class="pkt_ext_save_copy">Save</span> </a>
            </div>
        </li>
</ul>
<div class="pkt_ext_timer_container"></div>
</div>
</div>
</div>
</div>
</div></div></body></html>